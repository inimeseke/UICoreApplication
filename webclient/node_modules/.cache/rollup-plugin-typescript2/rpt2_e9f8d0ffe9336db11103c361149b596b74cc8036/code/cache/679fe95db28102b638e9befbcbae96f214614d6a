{"code":"import { nil, NO, UITextView, UIView } from \"uicore-ts\";\r\nexport class CBCheckbox extends UIView {\r\n    constructor(elementID) {\r\n        super(elementID, nil, \"label\");\r\n        this._class = CBCheckbox;\r\n        this.superclass = UIView;\r\n    }\r\n    initView(elementID, viewHTMLElement) {\r\n        super.initView(elementID, viewHTMLElement);\r\n        this.checkbox = new UIView(elementID + \"Checkbox\", nil, \"input\");\r\n        this.checkbox.viewHTMLElement.setAttribute(\"type\", \"checkbox\");\r\n        this.addSubview(this.checkbox);\r\n        this.titleLabel = new UITextView(elementID + \"TitleLabel\", UITextView.type.span);\r\n        this.addSubview(this.titleLabel);\r\n        this.checkbox.userInteractionEnabled = NO;\r\n        this.titleLabel.userInteractionEnabled = NO;\r\n        this.titleLabel.style.overflow = \"visible\";\r\n        this.titleLabel.style.lineHeight = \"1.5\";\r\n        this.style.cursor = \"pointer\";\r\n        this.viewHTMLElement.onchange = (event) => {\r\n            this.sendControlEventForKey(CBCheckbox.controlEvent.SelectionChange, event);\r\n        };\r\n    }\r\n    get isStatic() {\r\n        const result = this.checkbox.viewHTMLElement.classList.contains(\"staticCheckbox\");\r\n        return result;\r\n    }\r\n    set isStatic(isStatic) {\r\n        if (isStatic) {\r\n            this.checkbox.viewHTMLElement.classList.add(\"staticCheckbox\");\r\n        }\r\n        else {\r\n            this.checkbox.viewHTMLElement.classList.remove(\"staticCheckbox\");\r\n        }\r\n    }\r\n    get selected() {\r\n        return this.checkbox.viewHTMLElement.checked;\r\n    }\r\n    set selected(selected) {\r\n        this.checkbox.viewHTMLElement.checked = selected;\r\n    }\r\n    layoutSubviews() {\r\n        super.layoutSubviews();\r\n        const titleWidth = this.bounds.width - 35;\r\n        this.titleLabel.setMaxSizes(nil, titleWidth);\r\n        this.titleLabel.textPrefix = \"<span style=\\\"position: absolute; overflow: hidden; left: 0; top: 0;text-overflow: ellipsis; white-space: pre; padding-left: 35px; width: \" +\r\n            titleWidth + \"px;\\\">\";\r\n        this.titleLabel.textSuffix = \"</span>\";\r\n        this.hoverText = this.titleLabel.text.replace(this.titleLabel.textPrefix, \"\").replace(this.titleLabel.textSuffix, \"\");\r\n    }\r\n}\r\nCBCheckbox.controlEvent = Object.assign({}, UIView.controlEvent, {\r\n    \"SelectionChange\": \"SelectionChange\"\r\n});\r\n","references":["/Users/mart/UICoreApplication/webclient/node_modules/uicore-ts/compiledScripts/index.d.ts"],"dts":{"name":"/Users/mart/UICoreApplication/webclient/node_modules/.cache/rollup-plugin-typescript2/placeholder/Custom components/CBCheckbox.d.ts","writeByteOrderMark":false,"text":"import { UITextView, UIView } from \"uicore-ts\";\r\nexport declare class CBCheckbox extends UIView {\r\n    checkbox: UIView;\r\n    titleLabel: UITextView;\r\n    constructor(elementID: string);\r\n    initView(elementID: string, viewHTMLElement: HTMLElement): void;\r\n    static controlEvent: {\r\n        PointerDown: string;\r\n        PointerMove: string;\r\n        PointerLeave: string;\r\n        PointerEnter: string;\r\n        PointerUpInside: string;\r\n        PointerTap: string;\r\n        PointerUp: string;\r\n        MultipleTouches: string;\r\n        PointerCancel: string;\r\n        PointerHover: string;\r\n        EnterDown: string;\r\n        EnterUp: string;\r\n        EscDown: string;\r\n        TabDown: string;\r\n        LeftArrowDown: string;\r\n        RightArrowDown: string;\r\n        DownArrowDown: string;\r\n        UpArrowDown: string;\r\n        Focus: string;\r\n        Blur: string;\r\n    } & {\r\n        SelectionChange: string;\r\n    };\r\n    get isStatic(): boolean;\r\n    set isStatic(isStatic: boolean);\r\n    get selected(): boolean;\r\n    set selected(selected: boolean);\r\n    layoutSubviews(): void;\r\n}\r\n"}}
