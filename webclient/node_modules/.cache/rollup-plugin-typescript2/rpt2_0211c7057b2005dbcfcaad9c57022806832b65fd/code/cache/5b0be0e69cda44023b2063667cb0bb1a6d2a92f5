{"code":"import { IS, IS_NOT, UIColor, UITextField, UITextView, UIView } from \"uicore-ts\";\r\nimport { CBColor } from \"../CBCore/CBColor\";\r\nexport class CBTextField extends UIView {\r\n    constructor(elementID) {\r\n        super(elementID);\r\n        this._class = CBTextField;\r\n        this.superclass = UIView;\r\n    }\r\n    initView(elementID, viewHTMLElement) {\r\n        super.initView(elementID, viewHTMLElement);\r\n        viewHTMLElement.classList.add(\"input\");\r\n        this.textField = new UITextField(elementID + \"TextField\");\r\n        this.addSubview(this.textField);\r\n        this.titleLabel = new UITextView(elementID + \"TitleLabel\", UITextView.type.label);\r\n        this.titleLabel.textColor = UIColor.greyColor;\r\n        this.titleLabel.style.fontStyle = \"italic\";\r\n        this.addSubview(this.titleLabel);\r\n        this.titleLabel.viewHTMLElement.setAttribute(\"for\", this.textField.elementID);\r\n        this.textField.addTargetForControlEvent(UIView.controlEvent.Focus, (event) => {\r\n            this.titleLabel.viewHTMLElement.classList.add(\"active\");\r\n            this.titleLabel.textColor = CBColor.primaryTintColor;\r\n        });\r\n        this.textField.addTargetForControlEvent(UIView.controlEvent.Blur, (event) => {\r\n            if (IS_NOT(this.text)) {\r\n                this.titleLabel.viewHTMLElement.classList.remove(\"active\");\r\n            }\r\n            this.titleLabel.textColor = UIColor.greyColor;\r\n        });\r\n        this.textField.style.webkitUserSelect = \"text\";\r\n    }\r\n    setPlaceholderText(key, defaultString, parameters) {\r\n        this.titleLabel.setText(key, defaultString, parameters);\r\n    }\r\n    set placeholderText(placeholderText) {\r\n        this.titleLabel.text = placeholderText;\r\n    }\r\n    get placeholderText() {\r\n        return this.titleLabel.text;\r\n    }\r\n    get text() {\r\n        return this.textField.text;\r\n    }\r\n    set text(text) {\r\n        if (IS_NOT(text)) {\r\n            text = \"\";\r\n        }\r\n        this.textField.text = text;\r\n        if (IS(this.text)) {\r\n            this.titleLabel.viewHTMLElement.classList.add(\"active\");\r\n        }\r\n        else {\r\n            this.titleLabel.viewHTMLElement.classList.remove(\"active\");\r\n        }\r\n    }\r\n    updateContentForCurrentEnabledState() {\r\n        this.userInteractionEnabled = this.enabled;\r\n        if (this.enabled) {\r\n            this.alpha = 1;\r\n        }\r\n        else {\r\n            this.alpha = 0.5;\r\n        }\r\n    }\r\n    didMoveToSuperview(superview) {\r\n        super.didMoveToSuperview(superview);\r\n        this.text = this.text;\r\n    }\r\n    set enabled(enabled) {\r\n        super.enabled = enabled;\r\n        if (IS_NOT(enabled)) {\r\n            this.textField.viewHTMLElement.setAttribute(\"readonly\", \"\" + !enabled);\r\n        }\r\n        else {\r\n            this.textField.viewHTMLElement.removeAttribute(\"readonly\");\r\n        }\r\n    }\r\n    get enabled() {\r\n        return super.enabled;\r\n    }\r\n    focus() {\r\n        this.textField.focus();\r\n    }\r\n    blur() {\r\n        this.textField.blur();\r\n    }\r\n}\r\n","references":["/Users/mart/UICoreApplication/webclient/node_modules/uicore-ts/compiledScripts/index.d.ts","/Users/mart/UICoreApplication/webclient/scripts/CBCore/CBColor.ts"],"dts":{"name":"/Users/mart/UICoreApplication/webclient/node_modules/.cache/rollup-plugin-typescript2/placeholder/Custom components/CBTextField.d.ts","writeByteOrderMark":false,"text":"import { UITextField, UITextView, UIView } from \"uicore-ts\";\r\nexport declare class CBTextField extends UIView {\r\n    titleLabel: UITextView;\r\n    textField: UITextField;\r\n    constructor(elementID?: string);\r\n    initView(elementID: string, viewHTMLElement: HTMLElement): void;\r\n    setPlaceholderText(key: string, defaultString: string, parameters?: {\r\n        [x: string]: string;\r\n    }): void;\r\n    set placeholderText(placeholderText: string);\r\n    get placeholderText(): string;\r\n    get text(): string;\r\n    set text(text: string);\r\n    updateContentForCurrentEnabledState(): void;\r\n    didMoveToSuperview(superview: UIView): void;\r\n    set enabled(enabled: boolean);\r\n    get enabled(): boolean;\r\n    focus(): void;\r\n    blur(): void;\r\n}\r\n"}}
