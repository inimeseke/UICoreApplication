{"code":"import { UIButton, UIColor } from \"uicore-ts\";\r\nimport { CBColor } from \"../CBCore/CBColor\";\r\nimport { CBButton } from \"./CBButton\";\r\nexport class CBFlatButton extends CBButton {\r\n    constructor(elementID, elementType) {\r\n        super(elementID, elementType);\r\n        this._class = CBFlatButton;\r\n        this.superclass = CBButton;\r\n    }\r\n    initView(elementID, viewHTMLElement, initViewData) {\r\n        super.initView(elementID, viewHTMLElement, initViewData);\r\n        this.colors = {\r\n            titleLabel: {\r\n                normal: CBColor.primaryTintColor,\r\n                highlighted: CBColor.primaryTintColor,\r\n                selected: CBColor.primaryTintColor\r\n            },\r\n            background: {\r\n                normal: CBColor.transparentColor,\r\n                hovered: new UIColor(\"#F8F8F8\"),\r\n                highlighted: new UIColor(\"#ebebeb\"),\r\n                selected: new UIColor(\"#ebebeb\")\r\n            }\r\n        };\r\n    }\r\n    set titleLabelColor(titleLabelColor) {\r\n        this.colors.titleLabel.normal = titleLabelColor;\r\n        this.colors.titleLabel.highlighted = titleLabelColor;\r\n        this.colors.titleLabel.selected = titleLabelColor;\r\n        this.updateContentForCurrentState();\r\n    }\r\n    get titleLabelColor() {\r\n        const result = this.colors.titleLabel.normal;\r\n        return result;\r\n    }\r\n    updateContentForNormalState() {\r\n        UIButton.prototype.updateContentForNormalState.call(this);\r\n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.24)\"\r\n    }\r\n    updateContentForHoveredState() {\r\n        UIButton.prototype.updateContentForHoveredState.call(this);\r\n        //this.titleLabel.textColor = CBColor.whiteColor.colorByMultiplyingRGB(0.85);\r\n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.18)\";\r\n    }\r\n    updateContentForFocusedState() {\r\n        UIButton.prototype.updateContentForFocusedState.call(this);\r\n        //this.titleLabel.textColor = CBColor.whiteColor.colorByMultiplyingRGB(0.85);\r\n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.18)\"\r\n    }\r\n    updateContentForHighlightedState() {\r\n        UIButton.prototype.updateContentForHighlightedState.call(this);\r\n        //this.titleLabel.textColor = CBColor.whiteColor.colorByMultiplyingRGB(0.7);\r\n        //this.style.boxShadow = \"0 2px 2px 0 rgba(0,0,0,0.12)\"\r\n    }\r\n}\r\nCBFlatButton.colors = {\r\n    titleLabel: {\r\n        normal: CBColor.primaryTintColor,\r\n        highlighted: CBColor.primaryTintColor,\r\n        selected: CBColor.primaryTintColor\r\n    },\r\n    background: {\r\n        normal: CBColor.transparentColor,\r\n        hovered: new UIColor(\"#F8F8F8\"),\r\n        highlighted: new UIColor(\"#ebebeb\"),\r\n        selected: new UIColor(\"#ebebeb\")\r\n    }\r\n};\r\n","references":["/Users/mart/UICoreApplication/webclient/node_modules/uicore-ts/compiledScripts/index.d.ts","/Users/mart/UICoreApplication/webclient/scripts/CBCore/CBColor.ts","/Users/mart/UICoreApplication/webclient/scripts/Custom components/CBButton.ts"],"dts":{"name":"/Users/mart/UICoreApplication/webclient/node_modules/.cache/rollup-plugin-typescript2/placeholder/Custom components/CBFlatButton.d.ts","writeByteOrderMark":false,"text":"import { UIColor } from \"uicore-ts\";\r\nimport { CBColor } from \"../CBCore/CBColor\";\r\nimport { CBButton } from \"./CBButton\";\r\nexport declare class CBFlatButton extends CBButton {\r\n    static colors: {\r\n        titleLabel: {\r\n            normal: CBColor;\r\n            highlighted: CBColor;\r\n            selected: CBColor;\r\n        };\r\n        background: {\r\n            normal: UIColor;\r\n            hovered: UIColor;\r\n            highlighted: UIColor;\r\n            selected: UIColor;\r\n        };\r\n    };\r\n    constructor(elementID?: string, elementType?: string);\r\n    initView(elementID: string, viewHTMLElement: HTMLElement, initViewData: any): void;\r\n    set titleLabelColor(titleLabelColor: UIColor);\r\n    get titleLabelColor(): UIColor;\r\n    updateContentForNormalState(): void;\r\n    updateContentForHoveredState(): void;\r\n    updateContentForFocusedState(): void;\r\n    updateContentForHighlightedState(): void;\r\n}\r\n"}}
