"contains"in Array.prototype||(Array.prototype.contains=function(a){var r=this.indexOf(a)!=-1;return r});"contains"in String.prototype||(String.prototype.contains=function(a){var r=this.indexOf(a)!=-1;return r});onmessage=function(a){var r=y(a.data.filteringString,a.data.data,a.data.excludedData,a.data.dataKeyPath);r.identifier=a.data.identifier,r.instanceIdentifier=a.data.instanceIdentifier,postMessage(r)};function y(a,r,u,d){function l(t,n){var o=t.split("."),i=n;return o.forEach(function(c,f,p){i=i[c]}),i}var e=[],s=[];if(a){var h=[];a.split(" ").forEach(function(t,n,o){t&&h.push(t.toLowerCase())}),r.forEach(function(t,n,o){var i=l(d,t),c=i.toLowerCase(),f=[];h.forEach(function(p){f.push(c.contains(p)&&!u.contains(i))}),f.contains(!0)&&!f.contains(!1)&&(e.push(t),s.push(n))})}else u.length?e=r.forEach(function(t,n,o){u.indexOf(t)==-1&&(e.push(t),s.push(n))}):(e=r,r.forEach(function(t,n,o){s.push(n)}));return{filteredData:e,filteredIndexes:s}}
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vdWljb3JlLXRzL3NjcmlwdHMvVUlLZXlWYWx1ZVN0cmluZ0ZpbHRlcldlYldvcmtlci53b3JrZXIudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIlxuLy8gQHRzLWNoZWNrXG5cbmlmIChcImNvbnRhaW5zXCIgaW4gQXJyYXkucHJvdG90eXBlID09IGZhbHNlKSB7XG4gICAgXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIEFycmF5LnByb3RvdHlwZS5jb250YWlucyA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgIFxuICAgICAgICB2YXIgcmVzdWx0ID0gKHRoaXMuaW5kZXhPZihlbGVtZW50KSAhPSAtMSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIFxuICAgIH1cbiAgICBcbn1cblxuaWYgKFwiY29udGFpbnNcIiBpbiBTdHJpbmcucHJvdG90eXBlID09IGZhbHNlKSB7XG4gICAgXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIFN0cmluZy5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gICAgICAgIFxuICAgICAgICB2YXIgcmVzdWx0ID0gKHRoaXMuaW5kZXhPZihzdHJpbmcpICE9IC0xKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgXG4gICAgfVxuICAgIFxufVxuXG5cblxuXG5cbm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgIFxuICAgIC8vY29uc29sZS5sb2coJ01lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBtYWluIHNjcmlwdCcpO1xuICAgIHZhciB3b3JrZXJSZXN1bHQgPSBmaWx0ZXJLZXlWYWx1ZVBhdGhEYXRhKGV2ZW50LmRhdGEuZmlsdGVyaW5nU3RyaW5nLCBldmVudC5kYXRhLmRhdGEsIGV2ZW50LmRhdGEuZXhjbHVkZWREYXRhLCBldmVudC5kYXRhLmRhdGFLZXlQYXRoKTtcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgd29ya2VyUmVzdWx0LmlkZW50aWZpZXIgPSBldmVudC5kYXRhLmlkZW50aWZpZXI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHdvcmtlclJlc3VsdC5pbnN0YW5jZUlkZW50aWZpZXIgPSBldmVudC5kYXRhLmluc3RhbmNlSWRlbnRpZmllcjtcbiAgICBcbiAgICBcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcG9zdE1lc3NhZ2Uod29ya2VyUmVzdWx0KTtcbiAgICBcbn1cblxuXG5cblxuXG5cblxuXG5cbmZ1bmN0aW9uIGZpbHRlcktleVZhbHVlUGF0aERhdGEoZmlsdGVyaW5nU3RyaW5nLCBkYXRhLCBleGNsdWRlZERhdGEsIGRhdGFLZXlQYXRoKSB7XG4gICAgXG4gICAgZnVuY3Rpb24gdmFsdWVGb3JLZXlQYXRoKGtleVBhdGgsIG9iamVjdCkge1xuICAgICAgICBcbiAgICAgICAgdmFyIGtleXMgPSBrZXlQYXRoLnNwbGl0KFwiLlwiKTtcbiAgICAgICAgdmFyIGN1cnJlbnRPYmplY3QgPSBvYmplY3Q7XG4gICAgICAgIFxuICAgICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSwgaW5kZXgsIGFycmF5KSB7XG4gICAgICAgICAgICBjdXJyZW50T2JqZWN0ID0gY3VycmVudE9iamVjdFtrZXldO1xuICAgICAgICB9KVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGN1cnJlbnRPYmplY3Q7XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICB2YXIgZmlsdGVyZWREYXRhID0gW107XG4gICAgdmFyIGZpbHRlcmVkSW5kZXhlcyA9IFtdO1xuXG4gICAgaWYgKGZpbHRlcmluZ1N0cmluZykge1xuXG4gICAgICAgIHZhciBmaWx0ZXJpbmdTdHJpbmdXb3JkcyA9IFtdO1xuICAgICAgICBmaWx0ZXJpbmdTdHJpbmcuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24gKHdvcmQsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgaWYgKHdvcmQpIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXJpbmdTdHJpbmdXb3Jkcy5wdXNoKHdvcmQudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIFxuICAgICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKGRhdGFPYmplY3QsIGluZGV4LCBhcnJheSkge1xuXG4gICAgICAgICAgICB2YXIgZGF0YVN0cmluZyA9IHZhbHVlRm9yS2V5UGF0aChkYXRhS2V5UGF0aCwgZGF0YU9iamVjdCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBsb3dlcmNhc2VEYXRhU3RyaW5nID0gZGF0YVN0cmluZy50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBMb29rIHRocm91Z2ggYWxsIHRoZSB3b3JkcyBpbiB0aGUgaW5wdXRcbiAgICAgICAgICAgIHZhciB3b3Jkc0ZvdW5kID0gW107XG4gICAgICAgICAgICBmaWx0ZXJpbmdTdHJpbmdXb3Jkcy5mb3JFYWNoKGZ1bmN0aW9uICh3b3JkKSB7XG4gICAgICAgICAgICAgICAgd29yZHNGb3VuZC5wdXNoKGxvd2VyY2FzZURhdGFTdHJpbmcuY29udGFpbnMod29yZCkgJiYgIWV4Y2x1ZGVkRGF0YS5jb250YWlucyhkYXRhU3RyaW5nKSk7XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAvLyBPbmx5IHNob3cgdGhlIGRhdGFTdHJpbmcgaWYgaXQgbWF0Y2hlcyBhbGwgb2YgdGhlbVxuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgaWYgKHdvcmRzRm91bmQuY29udGFpbnModHJ1ZSkgJiYgIXdvcmRzRm91bmQuY29udGFpbnMoZmFsc2UpKSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgZmlsdGVyZWREYXRhLnB1c2goZGF0YU9iamVjdCk7XG4gICAgICAgICAgICAgICAgZmlsdGVyZWRJbmRleGVzLnB1c2goaW5kZXgpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pXG5cbiAgICAgICAgXG5cbiAgICB9XG4gICAgZWxzZSBpZiAoZXhjbHVkZWREYXRhLmxlbmd0aCkge1xuXG4gICAgICAgIFxuICAgICAgICBmaWx0ZXJlZERhdGEgPSBkYXRhLmZvckVhY2goZnVuY3Rpb24gKGRhdGFPYmplY3QsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoZXhjbHVkZWREYXRhLmluZGV4T2YoZGF0YU9iamVjdCkgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBmaWx0ZXJlZERhdGEucHVzaChkYXRhT2JqZWN0KTtcbiAgICAgICAgICAgICAgICBmaWx0ZXJlZEluZGV4ZXMucHVzaChpbmRleCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcblxuICAgIH1cbiAgICBlbHNlIHtcblxuICAgICAgICBmaWx0ZXJlZERhdGEgPSBkYXRhO1xuICAgICAgICBcbiAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChvYmplY3QsIGluZGV4LCBhcnJheSkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBmaWx0ZXJlZEluZGV4ZXMucHVzaChpbmRleCk7XG4gICAgICAgICAgICBcbiAgICAgICAgfSlcblxuICAgIH1cblxuICAgIFxuICAgIFxuICAgIHJldHVybiB7IFwiZmlsdGVyZWREYXRhXCI6IGZpbHRlcmVkRGF0YSwgXCJmaWx0ZXJlZEluZGV4ZXNcIjogZmlsdGVyZWRJbmRleGVzIH07XG4gICAgXG4gICAgXG5cbn1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiJdLAogICJtYXBwaW5ncyI6ICJBQUdJLGFBQWMsTUFBTSxZQUdwQixNQUFNLFVBQVUsU0FBVyxTQUFVQSxFQUFTLENBRTFDLElBQUlDLEVBQVUsS0FBSyxRQUFRRCxDQUFPLEdBQUssR0FDdkMsT0FBT0MsQ0FFWCxHQUlBLGFBQWMsT0FBTyxZQUdyQixPQUFPLFVBQVUsU0FBVyxTQUFVQyxFQUFRLENBRTFDLElBQUlELEVBQVUsS0FBSyxRQUFRQyxDQUFNLEdBQUssR0FDdEMsT0FBT0QsQ0FFWCxHQVFKLFVBQVksU0FBVUUsRUFBTyxDQUd6QixJQUFJQyxFQUFlQyxFQUF1QkYsRUFBTSxLQUFLLGdCQUFpQkEsRUFBTSxLQUFLLEtBQU1BLEVBQU0sS0FBSyxhQUFjQSxFQUFNLEtBQUssV0FBVyxFQUd0SUMsRUFBYSxXQUFhRCxFQUFNLEtBQUssV0FFckNDLEVBQWEsbUJBQXFCRCxFQUFNLEtBQUssbUJBSTdDLFlBQVlDLENBQVksQ0FFNUIsRUFVQSxTQUFTQyxFQUF1QkMsRUFBaUJDLEVBQU1DLEVBQWNDLEVBQWEsQ0FFOUUsU0FBU0MsRUFBZ0JDLEVBQVNDLEVBQVEsQ0FFdEMsSUFBSUMsRUFBT0YsRUFBUSxNQUFNLEdBQUcsRUFDeEJHLEVBQWdCRixFQUVwQixPQUFBQyxFQUFLLFFBQVEsU0FBVUUsRUFBS0MsRUFBT0MsRUFBTyxDQUN0Q0gsRUFBZ0JBLEVBQWNDLEVBQ2xDLENBQUMsRUFFTUQsQ0FFWCxDQUVBLElBQUlJLEVBQWUsQ0FBQyxFQUNoQkMsRUFBa0IsQ0FBQyxFQUV2QixHQUFJYixFQUFpQixDQUVqQixJQUFJYyxFQUF1QixDQUFDLEVBQzVCZCxFQUFnQixNQUFNLEdBQUcsRUFBRSxRQUFRLFNBQVVlLEVBQU1MLEVBQU9DLEVBQU8sQ0FDekRJLEdBQ0FELEVBQXFCLEtBQUtDLEVBQUssWUFBWSxDQUFDLENBRXBELENBQUMsRUFFRGQsRUFBSyxRQUFRLFNBQVVlLEVBQVlOLEVBQU9DLEVBQU8sQ0FFN0MsSUFBSU0sRUFBYWIsRUFBZ0JELEVBQWFhLENBQVUsRUFFcERFLEVBQXNCRCxFQUFXLFlBQVksRUFHN0NFLEVBQWEsQ0FBQyxFQUNsQkwsRUFBcUIsUUFBUSxTQUFVQyxFQUFNLENBQ3pDSSxFQUFXLEtBQUtELEVBQW9CLFNBQVNILENBQUksR0FBSyxDQUFDYixFQUFhLFNBQVNlLENBQVUsQ0FBQyxDQUM1RixDQUFDLEVBSUdFLEVBQVcsU0FBUyxFQUFJLEdBQUssQ0FBQ0EsRUFBVyxTQUFTLEVBQUssSUFFdkRQLEVBQWEsS0FBS0ksQ0FBVSxFQUM1QkgsRUFBZ0IsS0FBS0gsQ0FBSyxFQUlsQyxDQUFDLENBSUwsTUFDU1IsRUFBYSxPQUdsQlUsRUFBZVgsRUFBSyxRQUFRLFNBQVVlLEVBQVlOLEVBQU9DLEVBQU8sQ0FFeERULEVBQWEsUUFBUWMsQ0FBVSxHQUFLLEtBRXBDSixFQUFhLEtBQUtJLENBQVUsRUFDNUJILEVBQWdCLEtBQUtILENBQUssRUFJbEMsQ0FBQyxHQUtERSxFQUFlWCxFQUVmQSxFQUFLLFFBQVEsU0FBVUssRUFBUUksRUFBT0MsRUFBTyxDQUV6Q0UsRUFBZ0IsS0FBS0gsQ0FBSyxDQUU5QixDQUFDLEdBTUwsTUFBTyxDQUFFLGFBQWdCRSxFQUFjLGdCQUFtQkMsQ0FBZ0IsQ0FJOUUiLAogICJuYW1lcyI6IFsiZWxlbWVudCIsICJyZXN1bHQiLCAic3RyaW5nIiwgImV2ZW50IiwgIndvcmtlclJlc3VsdCIsICJmaWx0ZXJLZXlWYWx1ZVBhdGhEYXRhIiwgImZpbHRlcmluZ1N0cmluZyIsICJkYXRhIiwgImV4Y2x1ZGVkRGF0YSIsICJkYXRhS2V5UGF0aCIsICJ2YWx1ZUZvcktleVBhdGgiLCAia2V5UGF0aCIsICJvYmplY3QiLCAia2V5cyIsICJjdXJyZW50T2JqZWN0IiwgImtleSIsICJpbmRleCIsICJhcnJheSIsICJmaWx0ZXJlZERhdGEiLCAiZmlsdGVyZWRJbmRleGVzIiwgImZpbHRlcmluZ1N0cmluZ1dvcmRzIiwgIndvcmQiLCAiZGF0YU9iamVjdCIsICJkYXRhU3RyaW5nIiwgImxvd2VyY2FzZURhdGFTdHJpbmciLCAid29yZHNGb3VuZCJdCn0K
