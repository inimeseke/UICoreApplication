{
  "version": 3,
  "sources": ["../scripts/UIScrollView.ts"],
  "sourcesContent": ["import { nil, NO, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIView } from \"./UIView\"\n\n\n\n\n\nexport class UIScrollView extends UIView {\n    \n    \n    _contentOffset: UIPoint = new UIPoint(0, 0)\n    _contentScale: number = 1\n    \n    containerView: UIView\n    \n    _pointerDown: boolean\n    \n    _scrollEnabled: boolean = YES\n    \n    _previousClientPoint: UIPoint\n    \n    _intrinsicContentFrame: UIRectangle\n    \n    constructor(elementID: string, viewHTMLElement?: HTMLElement) {\n        \n        super(elementID, viewHTMLElement)\n        \n        this.containerView = new UIView(elementID + \"ContainerView\")\n        super.addSubview(this.containerView)\n        \n        \n        this.style.overflow = \"hidden\"\n        \n        this.pausesPointerEvents = NO //YES;\n        \n        \n        this.addTargetForControlEvent(UIView.controlEvent.PointerDown, function () {\n            \n            this._pointerDown = YES\n            \n        }.bind(this))\n        \n        this.addTargetForControlEvent(UIView.controlEvent.PointerUp, function () {\n            \n            this._pointerDown = NO\n            \n            this._previousClientPoint = null\n            \n            scrollStopped()\n            \n        }.bind(this))\n        \n        \n        function scrollStopped() {\n            \n            // Handle paging if needed\n            \n        }\n        \n        \n        this.addTargetForControlEvent(UIView.controlEvent.PointerMove, function (sender: UIScrollView, event: Event) {\n            \n            if (!(this._pointerDown && this._scrollEnabled && this._enabled)) {\n                \n                return\n                \n            }\n    \n            const currentClientPoint = new UIPoint(nil, nil)\n    \n            if ((window as any).MouseEvent && event instanceof MouseEvent) {\n                \n                currentClientPoint.x = (event as MouseEvent).clientX\n                currentClientPoint.y = (event as MouseEvent).clientY\n                \n            }\n            \n            if ((window as any).TouchEvent && event instanceof TouchEvent) {\n    \n                const touchEvent: TouchEvent = event\n    \n                if (touchEvent.touches.length != 1) {\n                    \n                    this._pointerDown = NO\n                    this._previousClientPoint = null\n                    \n                    scrollStopped()\n                    \n                    return\n                    \n                }\n                \n                currentClientPoint.x = touchEvent.touches[0].clientX\n                currentClientPoint.y = touchEvent.touches[0].clientY\n                \n            }\n            \n            if (!this._previousClientPoint) {\n                \n                this._previousClientPoint = currentClientPoint\n                \n                return\n                \n            }\n    \n            const changePoint = currentClientPoint.copy().subtract(this._previousClientPoint)\n    \n    \n            if (this.containerView.bounds.width <= this.bounds.width) {\n                changePoint.x = 0\n            }\n            if (0 < this.contentOffset.x + changePoint.x) {\n                changePoint.x = -this.contentOffset.x\n            }\n            if (this.contentOffset.x + changePoint.x < -this.bounds.width) {\n                changePoint.x = -this.bounds.width - this.contentOffset.x\n            }\n            \n            if (this.containerView.bounds.height <= this.bounds.height) {\n                changePoint.y = 0\n            }\n            if (0 < this.contentOffset.y + changePoint.y) {\n                changePoint.y = -this.contentOffset.y\n            }\n            if (this.contentOffset.y + changePoint.y < -this.bounds.height) {\n                changePoint.y = -this.bounds.height - this.contentOffset.y\n            }\n            \n            this.contentOffset = this.contentOffset.add(changePoint)\n            \n            this._previousClientPoint = currentClientPoint\n            \n        }.bind(this))\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    invalidateIntrinsicContentFrame() {\n        \n        this._intrinsicContentFrame = nil\n        \n    }\n    \n    \n    \n    \n    \n    get contentOffset() {\n        \n        return this._contentOffset\n        \n    }\n    \n    set contentOffset(offset: UIPoint) {\n        \n        this._contentOffset = offset\n        this.setNeedsLayout()\n        \n    }\n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n        \n        // var intrinsicContentFrame = this._intrinsicContentFrame;\n        // if (!IS(intrinsicContentFrame)) {\n        //     intrinsicContentFrame = this.containerView.intrinsicContentSizeWithConstraints();   \n        // }\n        // intrinsicContentFrame.offsetByPoint(this.contentOffset);\n        // intrinsicContentFrame.height = this.containerView.viewHTMLElement.scrollHeight;\n        // intrinsicContentFrame.width = this.containerView.viewHTMLElement.scrollWidth;\n        // this.containerView.frame = intrinsicContentFrame;\n        \n        this.containerView.frame = this.containerView.bounds.offsetByPoint(this.contentOffset)\n        \n        \n        \n        \n    }\n    \n    \n    \n    // get _subviews() {\n    //     return super.subviews;\n    // }\n    \n    // set _subviews(subviews: UIView[]) {\n    //     super.subviews = subviews;\n    // }\n    \n    // get subviews() {\n    //     return this.containerView.subviews;\n    // }\n    \n    // set subviews(subviews: UIView[]) {\n    \n    //     this.containerView.subviews = subviews;\n    \n    //     this.invalidateIntrinsicContentFrame();\n    \n    \n    // }\n    \n    \n    hasSubview(view: UIView) {\n        return this.containerView.hasSubview(view)\n    }\n    \n    addSubview(view: UIView) {\n        \n        this.containerView.addSubview(view)\n        \n        this.invalidateIntrinsicContentFrame()\n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": "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",
  "names": []
}
