var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var UICore_exports = {};
__export(UICore_exports, {
  UICore: () => UICore
});
module.exports = __toCommonJS(UICore_exports);
var import_UICoreExtensions = require("./UICoreExtensions");
var import_UICoreValues = require("./UICoreValues");
var import_UIObject = require("./UIObject");
var import_UIRoute = require("./UIRoute");
var import_UIView = require("./UIView");
var import_UIViewController = require("./UIViewController");
class UICore extends import_UIObject.UIObject {
  constructor(rootDivElementID, rootViewControllerClass) {
    super();
    this.rootViewController = import_UIObject.nil;
    import_UICoreValues.UICoreValues.RootViewControllerClass = rootViewControllerClass;
    import_UICoreValues.UICoreValues.main = this;
    const rootViewElement = document.getElementById(rootDivElementID);
    const rootView = new import_UIView.UIView(rootDivElementID, rootViewElement);
    rootView.pausesPointerEvents = import_UIObject.NO;
    if (import_UICoreValues.UICoreValues.RootViewControllerClass) {
      if (!(import_UICoreValues.UICoreValues.RootViewControllerClass.prototype instanceof import_UIViewController.UIViewController) || import_UICoreValues.UICoreValues.RootViewControllerClass === import_UIViewController.UIViewController) {
        console.log(
          "Error, UICore.RootViewControllerClass must be a or a subclass of UIViewController, falling back to UIViewController."
        );
        import_UICoreValues.UICoreValues.RootViewControllerClass = import_UIViewController.UIViewController;
      }
      this.rootViewController = new import_UICoreValues.UICoreValues.RootViewControllerClass(rootView);
    } else {
      this.rootViewController = new import_UIViewController.UIViewController(rootView);
    }
    this.rootViewController.viewWillAppear();
    this.rootViewController.viewDidAppear();
    this.rootViewController.view.addTargetForControlEvent(
      import_UIView.UIView.controlEvent.PointerUpInside,
      function(sender, event) {
        document.activeElement.blur();
      }
    );
    const windowDidResize = function() {
      this.rootViewController._triggerLayoutViewSubviews();
      import_UIView.UIView.layoutViewsIfNeeded();
      this.rootViewController._triggerLayoutViewSubviews();
      this.rootViewController.view.broadcastEventInSubtree({
        name: import_UICoreValues.UICoreValues.broadcastEventName.WindowDidResize,
        parameters: import_UIObject.nil
      });
    };
    window.addEventListener("resize", windowDidResize.bind(this));
    const didScroll = function() {
      this.rootViewController.view.broadcastEventInSubtree({
        name: import_UIView.UIView.broadcastEventName.PageDidScroll,
        parameters: import_UIObject.nil
      });
    }.bind(this);
    window.addEventListener("scroll", didScroll, false);
    const hashDidChange = function() {
      this.rootViewController.handleRouteRecursively(import_UIRoute.UIRoute.currentRoute);
      this.rootViewController.view.broadcastEventInSubtree({
        name: import_UICoreValues.UICoreValues.broadcastEventName.RouteDidChange,
        parameters: import_UIObject.nil
      });
    }.bind(this);
    window.addEventListener("hashchange", hashDidChange.bind(this), false);
    hashDidChange();
  }
  static loadClass(className) {
    if (window[className]) {
      return;
    }
    document.writeln("<script type='text/javascript' src='dist/UICore/" + className + ".js'><\/script>");
  }
}
import_UICoreValues.UICoreValues.RootViewControllerClass = import_UIObject.nil;
Array.prototype.indexOf || (Array.prototype.indexOf = function(d, e) {
  var a;
  if (null == this) {
    throw new TypeError('"this" is null or not defined');
  }
  const c = Object(this), b = c.length >>> 0;
  if (0 === b) {
    return -1;
  }
  a = +e || 0;
  Infinity === Math.abs(a) && (a = 0);
  if (a >= b) {
    return -1;
  }
  for (a = Math.max(0 <= a ? a : b - Math.abs(a), 0); a < b; ) {
    if (a in c && c[a] === d) {
      return a;
    }
    a++;
  }
  return -1;
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  UICore
});
//# sourceMappingURL=UICore.js.map
