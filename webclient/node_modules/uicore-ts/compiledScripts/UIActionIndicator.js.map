{
  "version": 3,
  "sources": ["../scripts/UIActionIndicator.ts"],
  "sourcesContent": ["import { NO, YES } from \"./UIObject\"\nimport { UIView } from \"./UIView\"\n\n\nexport class UIActionIndicator extends UIView {\n    \n    \n    indicatorView: UIView\n    \n    _size: number = 50\n    \n    constructor(elementID?: string) {\n        \n        super(elementID)\n        \n        this.indicatorView = new UIView(this.elementID + \"IndicatorView\")\n        this.indicatorView.viewHTMLElement.classList.add(\"LukeHaasLoader\")\n        this.addSubview(this.indicatorView)\n        \n        this.hidden = YES\n        \n    }\n    \n    \n    \n    \n    \n    set size(size: number) {\n        \n        this._size = size\n        \n        this.setNeedsLayoutUpToRootView()\n        \n    }\n    \n    get size() {\n        \n        return this._size\n        \n    }\n    \n    \n    \n    set hidden(hidden: boolean) {\n        \n        super.hidden = hidden\n        \n        if (hidden) {\n            \n            this.indicatorView.removeFromSuperview()\n            \n        }\n        else {\n            \n            this.addSubview(this.indicatorView)\n            \n        }\n        \n    }\n    \n    start() {\n        \n        this.hidden = NO\n        \n    }\n    \n    stop() {\n        \n        this.hidden = YES\n        \n    }\n    \n    \n    \n    layoutSubviews() {\n        \n        super.layoutSubviews()\n    \n        const bounds = this.bounds\n    \n        //this.indicatorView.centerInContainer();\n        \n        this.indicatorView.style.height = \"\" + this._size.integerValue + \"px\"\n        this.indicatorView.style.width = \"\" + this._size.integerValue + \"px\"\n    \n        const minSize = Math.min(this.bounds.height, this.bounds.width)\n    \n        this.indicatorView.style.maxHeight = \"\" + minSize.integerValue + \"px\"\n        this.indicatorView.style.maxWidth = \"\" + minSize.integerValue + \"px\"\n    \n        const size = Math.min(this._size, minSize)\n    \n        this.indicatorView.style.left = \"\" + ((bounds.width - size) * 0.5 - 11).integerValue + \"px\"\n        this.indicatorView.style.top = \"\" + ((bounds.height - size) * 0.5 - 11).integerValue + \"px\"\n        \n        \n        \n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAwB;AACxB,oBAAuB;AAGhB,MAAM,0BAA0B,qBAAO;AAAA,EAO1C,YAAY,WAAoB;AAE5B,UAAM,SAAS;AAJnB,iBAAgB;AAMZ,SAAK,gBAAgB,IAAI,qBAAO,KAAK,YAAY,eAAe;AAChE,SAAK,cAAc,gBAAgB,UAAU,IAAI,gBAAgB;AACjE,SAAK,WAAW,KAAK,aAAa;AAElC,SAAK,SAAS;AAAA,EAElB;AAAA,EAMA,IAAI,KAAK,MAAc;AAEnB,SAAK,QAAQ;AAEb,SAAK,2BAA2B;AAAA,EAEpC;AAAA,EAEA,IAAI,OAAO;AAEP,WAAO,KAAK;AAAA,EAEhB;AAAA,EAIA,IAAI,OAAO,QAAiB;AAExB,UAAM,SAAS;AAEf,QAAI,QAAQ;AAER,WAAK,cAAc,oBAAoB;AAAA,IAE3C,OACK;AAED,WAAK,WAAW,KAAK,aAAa;AAAA,IAEtC;AAAA,EAEJ;AAAA,EAEA,QAAQ;AAEJ,SAAK,SAAS;AAAA,EAElB;AAAA,EAEA,OAAO;AAEH,SAAK,SAAS;AAAA,EAElB;AAAA,EAIA,iBAAiB;AAEb,UAAM,eAAe;AAErB,UAAM,SAAS,KAAK;AAIpB,SAAK,cAAc,MAAM,SAAS,KAAK,KAAK,MAAM,eAAe;AACjE,SAAK,cAAc,MAAM,QAAQ,KAAK,KAAK,MAAM,eAAe;AAEhE,UAAM,UAAU,KAAK,IAAI,KAAK,OAAO,QAAQ,KAAK,OAAO,KAAK;AAE9D,SAAK,cAAc,MAAM,YAAY,KAAK,QAAQ,eAAe;AACjE,SAAK,cAAc,MAAM,WAAW,KAAK,QAAQ,eAAe;AAEhE,UAAM,OAAO,KAAK,IAAI,KAAK,OAAO,OAAO;AAEzC,SAAK,cAAc,MAAM,OAAO,OAAO,OAAO,QAAQ,QAAQ,MAAM,IAAI,eAAe;AACvF,SAAK,cAAc,MAAM,MAAM,OAAO,OAAO,SAAS,QAAQ,MAAM,IAAI,eAAe;AAAA,EAK3F;AAMJ;",
  "names": []
}
