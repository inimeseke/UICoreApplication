var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var UITimer_exports = {};
__export(UITimer_exports, {
  UITimer: () => UITimer
});
module.exports = __toCommonJS(UITimer_exports);
const YES = true;
const NO = false;
class UITimer {
  constructor(interval, repeats, target) {
    this.interval = interval;
    this.repeats = repeats;
    this.target = target;
    this.isValid = YES;
    this.schedule();
  }
  schedule() {
    const callback = function() {
      if (this.repeats == NO) {
        this.invalidate();
      }
      this.target();
    }.bind(this);
    this._intervalID = window.setInterval(callback, this.interval * 1e3);
  }
  reschedule() {
    this.invalidate();
    this.schedule();
  }
  fire() {
    if (this.repeats == NO) {
      this.invalidate();
    } else {
      this.reschedule();
    }
    this.target();
  }
  invalidate() {
    if (this.isValid) {
      clearInterval(this._intervalID);
      this.isValid = NO;
    }
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  UITimer
});
//# sourceMappingURL=UITimer.js.map
