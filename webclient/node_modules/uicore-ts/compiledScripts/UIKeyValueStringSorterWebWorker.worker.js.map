{
  "version": 3,
  "sources": ["../scripts/UIKeyValueStringSorterWebWorker.worker.ts"],
  "sourcesContent": ["\n\n\n\n\n\n\n\n\n\n\nonmessage = function (event) {\n    \n    //console.log('Message received from main script');\n    var workerResult = sortData(\n        event.data.data,\n        event.data.sortingInstructions\n    )\n    \n    // @ts-ignore\n    workerResult.identifier = event.data.identifier;\n    // @ts-ignore\n    workerResult.instanceIdentifier = event.data.instanceIdentifier;\n    \n    \n    // @ts-ignore\n    postMessage(workerResult);\n    \n}\n\n\n\n\n\nfunction valueForKeyPath(keyPath, object) {\n        \n    var keys = keyPath.split(\".\");\n    var currentObject = object;\n    \n    for (var i = 0; i < keys.length; i++) {\n        \n        var key = keys[i];\n        \n        if (key.substring(0, 2) == \"[]\") {\n            \n            // This next object will be an array and the rest of the keys need to be run for each of the elements\n            \n            currentObject = currentObject[key.substring(2)];\n            \n            // CurrentObject is now an array\n            \n            var remainingKeyPath = keys.slice(i + 1).join(\".\");\n            \n            var currentArray = currentObject;\n            \n            currentObject = currentArray.map(function (subObject, index, array) {\n                \n                var result = valueForKeyPath(remainingKeyPath, subObject);\n                \n                return result;\n                \n            })\n            \n            break;\n            \n        }\n        \n        currentObject = (currentObject || {})[key];\n        \n        \n    }\n    \n    return currentObject;\n    \n}\n\n\n\n\n\n\n\nfunction compare(firstObject, secondObject, sortingInstructions) {\n    \n    \n    if (sortingInstructions.length == 0) {\n        return 0;\n    }\n    \n    \n    var sortingInstruction = sortingInstructions[0];\n    \n    \n    var directionMultiplier = 1;\n    if (sortingInstruction.direction == \"descending\") {\n        directionMultiplier = -1;\n    }\n    \n    \n    var firstDataString = firstObject[sortingInstruction.keyPath];\n    \n    var secondDataString = secondObject[sortingInstruction.keyPath];\n    \n    \n    \n    \n    if (firstDataString < secondDataString) {\n        \n        return -1 * directionMultiplier;\n        \n    }\n    \n    if (firstDataString > secondDataString) {\n        \n        return 1 * directionMultiplier;\n        \n    }\n    \n    if (sortingInstructions.length > 1) {\n        \n        var remainingSortingInstructions = sortingInstructions.slice(1);\n        \n        \n        \n        return compare(firstObject, secondObject, remainingSortingInstructions);\n        \n        \n    }\n    \n    return 0;\n    \n  }\n\n  \n  \n  \n\nfunction sortData(data, sortingInstructions) {\n    \n    \n    var sortingObjects = data.map(function (dataItem, index, array) {\n        \n        var result = {\n            \n            \"_UIKeyValueStringSorterWebWorkerSortingObjectIndex\": index\n            \n        }\n        \n        \n        sortingInstructions.forEach(function(instruction, index, instructionsArray) {\n            \n            result[instruction.keyPath] = JSON.stringify(valueForKeyPath(instruction.keyPath, dataItem) || {}).toLowerCase();\n            \n        })\n        \n        \n        \n        \n        return result;\n        \n    \n    })\n    \n    \n    var sortedData = sortingObjects.sort(function (firstObject, secondObject) {\n            \n        return compare(firstObject, secondObject, sortingInstructions);\n\n    })\n    \n    var sortedIndexes = sortedData.map(function (object, index, array) {\n        \n        var sortedIndex = object._UIKeyValueStringSorterWebWorkerSortingObjectIndex;\n        \n        return sortedIndex;\n        \n    })\n    \n    var result = {\n        \n        \"sortedData\": sortedIndexes.map(function (sortedIndex, index, array) {\n            \n            return data[sortedIndex];\n            \n        }),\n        \"sortedIndexes\": sortedIndexes\n        \n    }\n    \n    \n    return result;\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": "AAWA,YAAY,SAAU,OAAO;AAGzB,MAAI,eAAe;AAAA,IACf,MAAM,KAAK;AAAA,IACX,MAAM,KAAK;AAAA,EACf;AAGA,eAAa,aAAa,MAAM,KAAK;AAErC,eAAa,qBAAqB,MAAM,KAAK;AAI7C,cAAY,YAAY;AAE5B;AAMA,SAAS,gBAAgB,SAAS,QAAQ;AAEtC,MAAI,OAAO,QAAQ,MAAM,GAAG;AAC5B,MAAI,gBAAgB;AAEpB,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAElC,QAAI,MAAM,KAAK;AAEf,QAAI,IAAI,UAAU,GAAG,CAAC,KAAK,MAAM;AAI7B,sBAAgB,cAAc,IAAI,UAAU,CAAC;AAI7C,UAAI,mBAAmB,KAAK,MAAM,IAAI,CAAC,EAAE,KAAK,GAAG;AAEjD,UAAI,eAAe;AAEnB,sBAAgB,aAAa,IAAI,SAAU,WAAW,OAAO,OAAO;AAEhE,YAAI,SAAS,gBAAgB,kBAAkB,SAAS;AAExD,eAAO;AAAA,MAEX,CAAC;AAED;AAAA,IAEJ;AAEA,qBAAiB,iBAAiB,CAAC,GAAG;AAAA,EAG1C;AAEA,SAAO;AAEX;AAQA,SAAS,QAAQ,aAAa,cAAc,qBAAqB;AAG7D,MAAI,oBAAoB,UAAU,GAAG;AACjC,WAAO;AAAA,EACX;AAGA,MAAI,qBAAqB,oBAAoB;AAG7C,MAAI,sBAAsB;AAC1B,MAAI,mBAAmB,aAAa,cAAc;AAC9C,0BAAsB;AAAA,EAC1B;AAGA,MAAI,kBAAkB,YAAY,mBAAmB;AAErD,MAAI,mBAAmB,aAAa,mBAAmB;AAKvD,MAAI,kBAAkB,kBAAkB;AAEpC,WAAO,KAAK;AAAA,EAEhB;AAEA,MAAI,kBAAkB,kBAAkB;AAEpC,WAAO,IAAI;AAAA,EAEf;AAEA,MAAI,oBAAoB,SAAS,GAAG;AAEhC,QAAI,+BAA+B,oBAAoB,MAAM,CAAC;AAI9D,WAAO,QAAQ,aAAa,cAAc,4BAA4B;AAAA,EAG1E;AAEA,SAAO;AAET;AAMF,SAAS,SAAS,MAAM,qBAAqB;AAGzC,MAAI,iBAAiB,KAAK,IAAI,SAAU,UAAU,OAAO,OAAO;AAE5D,QAAIA,UAAS;AAAA,MAET,sDAAsD;AAAA,IAE1D;AAGA,wBAAoB,QAAQ,SAAS,aAAaC,QAAO,mBAAmB;AAExE,MAAAD,QAAO,YAAY,WAAW,KAAK,UAAU,gBAAgB,YAAY,SAAS,QAAQ,KAAK,CAAC,CAAC,EAAE,YAAY;AAAA,IAEnH,CAAC;AAKD,WAAOA;AAAA,EAGX,CAAC;AAGD,MAAI,aAAa,eAAe,KAAK,SAAU,aAAa,cAAc;AAEtE,WAAO,QAAQ,aAAa,cAAc,mBAAmB;AAAA,EAEjE,CAAC;AAED,MAAI,gBAAgB,WAAW,IAAI,SAAU,QAAQ,OAAO,OAAO;AAE/D,QAAI,cAAc,OAAO;AAEzB,WAAO;AAAA,EAEX,CAAC;AAED,MAAI,SAAS;AAAA,IAET,cAAc,cAAc,IAAI,SAAU,aAAa,OAAO,OAAO;AAEjE,aAAO,KAAK;AAAA,IAEhB,CAAC;AAAA,IACD,iBAAiB;AAAA,EAErB;AAGA,SAAO;AAGX;",
  "names": ["result", "index"]
}
