{
  "version": 3,
  "sources": ["../scripts/UIRootViewController.ts"],
  "sourcesContent": ["import { UIColor } from \"./UIColor\"\nimport { UICoreValues } from \"./UICoreValues\"\nimport { UIDialogView } from \"./UIDialogView\"\nimport { EXTEND, FIRST, FIRST_OR_NIL, IS, IS_NOT, LAZY_VALUE, nil, NO, UIObject, wrapInNil, YES } from \"./UIObject\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport { UIRoute } from \"./UIRoute\"\nimport { UIView } from \"./UIView\"\nimport { UIViewController } from \"./UIViewController\"\n\n\n\n\ninterface UIRootViewControllerLazyViewControllerObject<T extends typeof UIViewController> {\n    instance: InstanceType<T>;\n    class: T;\n    shouldShow: () => (Promise<boolean> | boolean);\n    isInitialized: boolean\n}\n\n\ninterface UIRootViewControllerLazyViewControllersObject {\n    [x: string]: UIRootViewControllerLazyViewControllerObject<typeof UIViewController>\n}\n\n\ninterface UIRootViewControllerLazyContentViewControllersObject extends UIRootViewControllerLazyViewControllersObject {\n    mainViewController: UIRootViewControllerLazyViewControllerObject<typeof UIViewController>\n}\n\n\n\n\n\nexport class UIRootViewController extends UIViewController {\n    \n    topBarView: UIView = nil\n    backgroundView: UIView = new UIView(this.view.elementID + \"BackgroundView\").configuredWithObject({\n        style: {\n            background: \"linear-gradient(\" +\n                UIColor.whiteColor.stringValue + \", \" + UIColor.blueColor.stringValue + \")\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\"\n        }\n    })\n    bottomBarView: UIView = nil\n    \n    _contentViewController: UIViewController\n    contentViewControllers: UIRootViewControllerLazyContentViewControllersObject = {\n        mainViewController: this.lazyViewControllerObjectWithClass(UIViewController)\n    }\n    \n    _detailsDialogView: UIDialogView = new UIDialogView(this.view.elementID + \"DetailsDialogView\")\n        .configuredWithObject({\n            dismiss: EXTEND((animated: boolean) => {\n                    const route = UIRoute.currentRoute\n                    this.detailsViewControllers.allValues.forEach(\n                        value => route.routeByRemovingComponentNamed(value.class.routeComponentName)\n                    )\n                    route.apply()\n                }\n            )\n        })\n    _detailsViewController: UIViewController\n    detailsViewControllers: UIRootViewControllerLazyViewControllersObject = {}\n    \n    \n    constructor(view: UIView) {\n        \n        super(view)\n        \n        this.view.addSubview(this.backgroundView)\n        \n    }\n    \n    \n    lazyViewControllerObjectWithClass<T extends typeof UIViewController>(\n        classObject: T,\n        shouldShow: () => (Promise<boolean> | boolean) = () => YES\n    ): UIRootViewControllerLazyViewControllerObject<T> {\n        const result: UIRootViewControllerLazyViewControllerObject<T> = {\n            class: classObject,\n            instance: nil,\n            shouldShow: shouldShow,\n            isInitialized: NO\n        }\n        UIObject.configureWithObject(result, {\n            // @ts-ignore\n            instance: LAZY_VALUE(\n                () => {\n                    result.isInitialized = YES\n                    return new classObject(\n                        new UIView(classObject.name.replace(\"ViewController\", \"View\"))\n                    )\n                }\n            )\n        })\n        return result\n    }\n    \n    \n    \n    \n    \n    async handleRoute(route: UIRoute) {\n        \n        super.handleRoute(route)\n        \n        UICoreValues.languageService.updateCurrentLanguageKey()\n        \n        // Show content view\n        await this.setContentViewControllerForRoute(route)\n        \n        await this.setDetailsViewControllerForRoute(route)\n        \n    }\n    \n    \n    async setContentViewControllerForRoute(route: UIRoute) {\n        const contentViewControllerObject = FIRST(\n            await this.contentViewControllers.allValues.findAsyncSequential(\n                async value => IS(route.componentWithViewController(value.class)) && await value.shouldShow()\n            ),\n            this.contentViewControllers.mainViewController\n        )\n        this.contentViewController = contentViewControllerObject.instance\n    }\n    \n    async setDetailsViewControllerForRoute(route: UIRoute) {\n        const detailsViewControllerObject = FIRST_OR_NIL(\n            await this.detailsViewControllers.allValues.findAsyncSequential(\n                async value => IS(route.componentWithViewController(value.class)) && await value.shouldShow()\n            )\n        )\n        if (IS(route) && IS(this.detailsViewController) && IS_NOT(detailsViewControllerObject)) {\n            this.detailsViewController = nil\n            this._detailsDialogView.dismiss()\n            this.view.setNeedsLayout()\n            return\n        }\n        this.detailsViewController = detailsViewControllerObject.instance\n    }\n    \n    get contentViewController(): UIViewController {\n        return this._contentViewController || nil\n    }\n    \n    set contentViewController(controller: UIViewController) {\n        \n        if (this.contentViewController == controller) {\n            return\n        }\n        \n        if (this.contentViewController) {\n            this.removeChildViewController(this.contentViewController)\n        }\n        \n        this._contentViewController = controller\n        this.addChildViewControllerInContainer(controller, this.backgroundView)\n        this._triggerLayoutViewSubviews()\n        \n        this.contentViewController.view.style.boxShadow = \"0 3px 6px 0 rgba(0, 0, 0, 0.1)\"\n        \n        this.view.setNeedsLayout()\n        \n    }\n    \n    \n    get detailsViewController(): UIViewController {\n        return this._detailsViewController\n    }\n    \n    set detailsViewController(controller: UIViewController) {\n        \n        if (this.detailsViewController == controller) {\n            return\n        }\n        \n        if (this.detailsViewController) {\n            this.removeChildViewController(this.detailsViewController)\n        }\n        \n        this._detailsViewController = controller\n        \n        if (!IS(controller)) {\n            return\n        }\n        \n        this.addChildViewControllerInDialogView(controller, this._detailsDialogView)\n        this._triggerLayoutViewSubviews()\n        \n        this.detailsViewController.view.style.borderRadius = \"5px\"\n        \n        this._detailsDialogView.showInView(this.view, YES)\n        \n    }\n    \n    updatePageScale() {\n        \n        const actualPageWidth = (UIView.pageWidth * UIView.pageScale).integerValue\n        const minScaleWidth = 700\n        const maxScaleWidth = 1500\n        const minScale = 0.7\n        const maxScale = 1\n        let scale = minScale + (maxScale - minScale) *\n            ((actualPageWidth - minScaleWidth) / (maxScaleWidth - minScaleWidth))\n        scale = Math.min(scale, maxScale)\n        scale = Math.max(scale, minScale)\n        \n        UIView.pageScale = scale\n        \n    }\n    \n    \n    performDefaultLayout(\n        paddingLength = 20,\n        contentViewMaxWidth = 1000,\n        topBarHeight = 65,\n        bottomBarMinHeight = 100\n    ) {\n        \n        // View bounds\n        const bounds = this.view.bounds\n        \n        this.topBarView.frame = new UIRectangle(0, 0, topBarHeight, bounds.width)\n        \n        this.backgroundView.style.top = \"\" + this.topBarView.frame.height.integerValue + \"px\"\n        this.backgroundView.style.width = \"100%\"\n        this.backgroundView.style.height = \"fit-content\"\n        this.backgroundView.style.minHeight = \"\" +\n            (bounds.height - this.topBarView.frame.height - this.bottomBarView.frame.height).integerValue + \"px\"\n        \n        this.contentViewController.view.style.position = \"relative\"\n        this.contentViewController.view.style.bottom = \"0\"\n        this.contentViewController.view.style.top = \"0\"\n        this.contentViewController.view.style.width = \"100%\"\n        this.contentViewController.view.setPaddings(nil, nil, paddingLength, nil)\n        this.contentViewController.view.setNeedsLayout()\n        \n        if (contentViewMaxWidth < this.backgroundView.bounds.width) {\n            \n            this.contentViewController.view.style.marginBottom = \"\" +\n                Math.min(\n                    (this.backgroundView.bounds.width - contentViewMaxWidth) * 0.5,\n                    paddingLength\n                ).integerValue + \"px\"\n            this.contentViewController.view.style.marginTop = \"\" +\n                Math.min(\n                    (this.backgroundView.bounds.width - contentViewMaxWidth) * 0.5,\n                    paddingLength\n                ).integerValue + \"px\"\n            this.contentViewController.view.style.maxWidth = contentViewMaxWidth + \"px\"\n            \n            this.contentViewController.view.style.left = \"\" +\n                ((this.backgroundView.bounds.width - this.contentViewController.view.bounds.width) * 0.5).integerValue +\n                \"px\"\n            \n        }\n        else {\n            \n            this.contentViewController.view.style.margin = \"\"\n            this.contentViewController.view.style.left = \"\"\n            this.contentViewController.view.style.maxWidth = \"\"\n            \n        }\n        \n        // Triggering immediate layout to ensure that the intrinsicContentHeight calculations work well\n        this.contentViewController._triggerLayoutViewSubviews()\n        \n        let contentViewControllerViewHeight = this.contentViewController.view.intrinsicContentHeight(\n            this.contentViewController.view.bounds.width\n        )\n        \n        const detailsViewControllerViewHeight = FIRST_OR_NIL(this.detailsViewController).view.intrinsicContentHeight(\n            this.contentViewController.view.bounds.width)\n        if (detailsViewControllerViewHeight > contentViewControllerViewHeight) {\n            contentViewControllerViewHeight = detailsViewControllerViewHeight\n        }\n        \n        \n        this.contentViewController.view.style.height = \"\" + contentViewControllerViewHeight.integerValue + \"px\"\n        this.contentViewController.view.setNeedsLayout()\n        \n        if (IS(this.detailsViewController)) {\n            \n            this.contentViewController.view.style.transform = \"translateX(\" + 0 + \"px)\"\n            \n            this.detailsViewController.view.frame = this.backgroundView.frame.rectangleWithInset(\n                paddingLength\n            ).rectangleWithWidth(\n                this.contentViewController.view.bounds.width,\n                0.5\n            ).rectangleWithHeight(\n                Math.max(\n                    this.detailsViewController.view.intrinsicContentHeight(\n                        this.detailsViewController.view.bounds.width\n                    ),\n                    this.contentViewController.view.bounds.height\n                )\n            )\n            \n        }\n        else {\n            \n            this.contentViewController.view.style.transform = \"translateX(\" + 0 + \"px)\"\n            \n        }\n        \n        \n        this.bottomBarView.frame = this.backgroundView.frame.rectangleWithY(\n            this.backgroundView.frame.max.y\n        ).rectangleWithHeight(\n            Math.max(bottomBarMinHeight, this.bottomBarView.intrinsicContentHeight(this.backgroundView.frame.width))\n        )\n        \n        \n        wrapInNil(this._detailsDialogView).setMaxSizes(this.bottomBarView.frame.max.y)\n        \n    }\n    \n    \n}\n"],
  "mappings": "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",
  "names": []
}
