{
  "version": 3,
  "sources": ["../scripts/UIPoint.ts"],
  "sourcesContent": ["import { UIObject } from \"./UIObject\"\n\n\n\n\n\nexport class UIPoint extends UIObject {\n    \n    constructor(public x: number, public y: number) {\n        \n        super()\n        \n    }\n    \n    \n    \n    \n    \n    copy() {\n        return new UIPoint(this.x, this.y)\n    }\n    \n    \n    isEqualTo(point: UIPoint) {\n    \n        const result = (this.x == point.x && this.y == point.y)\n    \n        return result\n        \n    }\n    \n    scale(zoom: number) {\n        const x = this.x\n        const y = this.y\n        this.x = x * zoom\n        this.y = y * zoom\n        return this\n    }\n    \n    \n    \n    add(v: UIPoint) {\n        this.x = this.x + v.x\n        this.y = this.y + v.y\n        return this\n    }\n    \n    subtract(v: UIPoint) {\n        this.x = this.x - v.x\n        this.y = this.y - v.y\n        return this\n    }\n    \n    to(b: UIPoint) {\n        const a = this\n        const ab = b.copy().add(a.copy().scale(-1))\n        return ab\n    }\n    \n    pointWithX(x: number) {\n        const result = this.copy()\n        result.x = x\n        return result\n    }\n    \n    pointWithY(y: number) {\n        const result = this.copy()\n        result.y = y\n        return result\n    }\n    \n    pointByAddingX(x: number) {\n        return this.pointWithX(this.x + x)\n    }\n    \n    pointByAddingY(y: number) {\n        return this.pointWithY(this.y + y)\n    }\n    \n    \n    get length() {\n        var result = this.x * this.x + this.y * this.y\n        result = Math.sqrt(result)\n        return result\n    }\n    \n    \n    didChange(b) {\n        \n        // Callback to be set by delegate\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyB;AAMlB,MAAM,gBAAgB,yBAAS;AAAA,EAElC,YAAmB,GAAkB,GAAW;AAE5C,UAAM;AAFS;AAAkB;AAAA,EAIrC;AAAA,EAMA,OAAO;AACH,WAAO,IAAI,QAAQ,KAAK,GAAG,KAAK,CAAC;AAAA,EACrC;AAAA,EAGA,UAAU,OAAgB;AAEtB,UAAM,SAAU,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM;AAErD,WAAO;AAAA,EAEX;AAAA,EAEA,MAAM,MAAc;AAChB,UAAM,IAAI,KAAK;AACf,UAAM,IAAI,KAAK;AACf,SAAK,IAAI,IAAI;AACb,SAAK,IAAI,IAAI;AACb,WAAO;AAAA,EACX;AAAA,EAIA,IAAI,GAAY;AACZ,SAAK,IAAI,KAAK,IAAI,EAAE;AACpB,SAAK,IAAI,KAAK,IAAI,EAAE;AACpB,WAAO;AAAA,EACX;AAAA,EAEA,SAAS,GAAY;AACjB,SAAK,IAAI,KAAK,IAAI,EAAE;AACpB,SAAK,IAAI,KAAK,IAAI,EAAE;AACpB,WAAO;AAAA,EACX;AAAA,EAEA,GAAG,GAAY;AACX,UAAM,IAAI;AACV,UAAM,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;AAC1C,WAAO;AAAA,EACX;AAAA,EAEA,WAAW,GAAW;AAClB,UAAM,SAAS,KAAK,KAAK;AACzB,WAAO,IAAI;AACX,WAAO;AAAA,EACX;AAAA,EAEA,WAAW,GAAW;AAClB,UAAM,SAAS,KAAK,KAAK;AACzB,WAAO,IAAI;AACX,WAAO;AAAA,EACX;AAAA,EAEA,eAAe,GAAW;AACtB,WAAO,KAAK,WAAW,KAAK,IAAI,CAAC;AAAA,EACrC;AAAA,EAEA,eAAe,GAAW;AACtB,WAAO,KAAK,WAAW,KAAK,IAAI,CAAC;AAAA,EACrC;AAAA,EAGA,IAAI,SAAS;AACT,QAAI,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AAC7C,aAAS,KAAK,KAAK,MAAM;AACzB,WAAO;AAAA,EACX;AAAA,EAGA,UAAU,GAAG;AAAA,EAIb;AAMJ;",
  "names": []
}
