{
  "version": 3,
  "sources": ["../scripts/UIDateTimeInput.ts"],
  "sourcesContent": ["import { nil } from \"./UIObject\"\nimport { UIView, UIViewAddControlEventTargetObject } from \"./UIView\"\n\n\nexport class UIDateTimeInput extends UIView {\n    \n    \n    \n    \n    \n    constructor(elementID: string, type: string = UIDateTimeInput.type.DateTime) {\n        \n        super(elementID, nil, \"input\")\n        \n        this.viewHTMLElement.setAttribute(\"type\", type)\n        \n        this.viewHTMLElement.onchange = (event) => {\n            this.sendControlEventForKey(UIDateTimeInput.controlEvent.ValueChange, event)\n        }\n        \n    }\n    \n    \n    \n    \n    \n    static controlEvent = Object.assign({}, UIView.controlEvent, {\n        \n        \"ValueChange\": \"ValueChange\"\n        \n    })\n    \n    get addControlEventTarget(): UIViewAddControlEventTargetObject<typeof UIDateTimeInput.controlEvent> {\n        \n        return super.addControlEventTarget as any\n        \n    }\n    \n    \n    \n    \n    \n    static type = {\n        \n        \"Date\": \"date\",\n        \"Time\": \"time\",\n        \"DateTime\": \"datetime\"\n        \n        \n    }\n    \n    \n    static format = {\n        \n        \"European\": \"DD-MM-YYYY\",\n        \"ISOComputer\": \"YYYY-MM-DD\",\n        \"American\": \"MM/DD/YYYY\"\n        \n    }\n    \n    \n    \n    \n    \n    get date() {\n        \n        const result = new Date((this.viewHTMLElement as HTMLInputElement).value)\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoB;AACpB,oBAA0D;AAGnD,MAAM,mBAAN,cAA8B,qBAAO;AAAA,EAMxC,YAAY,WAAmB,OAAe,iBAAgB,KAAK,UAAU;AAEzE,UAAM,WAAW,qBAAK,OAAO;AAE7B,SAAK,gBAAgB,aAAa,QAAQ,IAAI;AAE9C,SAAK,gBAAgB,WAAW,CAAC,UAAU;AACvC,WAAK,uBAAuB,iBAAgB,aAAa,aAAa,KAAK;AAAA,IAC/E;AAAA,EAEJ;AAAA,EAYA,IAAI,wBAAgG;AAEhG,WAAO,MAAM;AAAA,EAEjB;AAAA,EA4BA,IAAI,OAAO;AAEP,UAAM,SAAS,IAAI,KAAM,KAAK,gBAAqC,KAAK;AAExE,WAAO;AAAA,EAEX;AAMJ;AAxEO,IAAM,kBAAN;AAAM,gBAsBF,eAAe,OAAO,OAAO,CAAC,GAAG,qBAAO,cAAc;AAAA,EAEzD,eAAe;AAEnB,CAAC;AA1BQ,gBAsCF,OAAO;AAAA,EAEV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,YAAY;AAGhB;AA7CS,gBAgDF,SAAS;AAAA,EAEZ,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,YAAY;AAEhB;",
  "names": []
}
