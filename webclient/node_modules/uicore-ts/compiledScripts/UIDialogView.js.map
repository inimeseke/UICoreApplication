{
  "version": 3,
  "sources": ["../scripts/UIDialogView.ts"],
  "sourcesContent": ["import { IS_FIREFOX } from \"./ClientCheckers\"\nimport { UIColor } from \"./UIColor\"\nimport { UICoreValues } from \"./UICoreValues\"\nimport { IS, nil, NO, YES } from \"./UIObject\"\nimport { UIView, UIViewBroadcastEvent } from \"./UIView\"\n\n\nexport class UIDialogView<ViewType extends UIView = UIView> extends UIView {\n    \n    _isAUIDialogView = YES\n    \n    _view: ViewType = nil\n    \n    _appearedAnimated: boolean\n    \n    animationDuration: number = 0.25\n    \n    _zIndex: number = 100\n    \n    isVisible: boolean = NO\n    \n    dismissesOnTapOutside = YES\n    \n    constructor(elementID?: string, viewHTMLElement?: HTMLElement) {\n        \n        \n        super(elementID, viewHTMLElement)\n        \n        this.addTargetForControlEvent(\n            UIView.controlEvent.PointerTap,\n            function (this: UIDialogView, sender: UIView, event: Event) {\n                \n                this.didDetectTapOutside(sender, event)\n                \n            }.bind(this)\n        )\n        \n        this.backgroundColor = UIColor.colorWithRGBA(0, 10, 25).colorWithAlpha(0.75) //CBColor.primaryContentColor.colorWithAlpha(0.75)\n        \n        this.zIndex = this._zIndex\n        \n    }\n    \n    \n    \n    didDetectTapOutside(sender: UIView, event: Event) {\n        \n        if (event.target == this.viewHTMLElement && this.dismissesOnTapOutside) {\n            this.dismiss(this._appearedAnimated)\n        }\n        \n    }\n    \n    \n    set zIndex(zIndex: number) {\n        \n        this._zIndex = zIndex\n        this.style.zIndex = \"\" + zIndex\n        \n    }\n    \n    get zIndex() {\n        \n        return this._zIndex\n        \n    }\n    \n    \n    \n    set view(view: ViewType) {\n        \n        this._view.removeFromSuperview()\n        \n        this._view = view\n        \n        this.addSubview(view)\n        \n    }\n    \n    \n    get view() {\n        \n        return this._view\n        \n    }\n    \n    \n    \n    willAppear(animated: boolean = NO) {\n        \n        if (animated) {\n            \n            this.style.opacity = \"0\"\n            \n        }\n        \n        this.style.height = \"\"\n        \n        this._frame = null\n        \n    }\n    \n    \n    animateAppearing() {\n        \n        this.style.opacity = \"1\"\n        \n    }\n    \n    animateDisappearing() {\n        \n        this.style.opacity = \"0\"\n        \n    }\n    \n    \n    \n    showInView(containerView: UIView, animated: boolean) {\n        \n        \n        animated = (animated && !IS_FIREFOX)\n        \n        this._appearedAnimated = animated\n        \n        this.willAppear(animated)\n        \n        \n        containerView.addSubview(this)\n        \n        if (animated) {\n            \n            this.layoutSubviews()\n            \n            UIView.animateViewOrViewsWithDurationDelayAndFunction(\n                this,\n                this.animationDuration,\n                0,\n                undefined,\n                function () {\n                    \n                    \n                    this.animateAppearing()\n                    \n                    \n                }.bind(this),\n                nil\n            )\n            \n            \n        }\n        else {\n            \n            this.setNeedsLayout()\n            \n        }\n        \n        this.isVisible = YES\n        \n    }\n    \n    \n    \n    showInRootView(animated: boolean) {\n        \n        this.showInView(UICoreValues.main.rootViewController.view, animated)\n        \n    }\n    \n    \n    \n    dismiss(animated?: boolean) {\n        \n        \n        animated = (animated && !IS_FIREFOX)\n        \n        if (animated == undefined) {\n            \n            animated = this._appearedAnimated\n            \n        }\n        \n        if (animated) {\n            \n            UIView.animateViewOrViewsWithDurationDelayAndFunction(\n                this,\n                this.animationDuration,\n                0,\n                undefined,\n                function () {\n                    \n                    this.animateDisappearing()\n                    \n                }.bind(this),\n                function () {\n                    \n                    if (this.isVisible == NO) {\n                        \n                        this.removeFromSuperview()\n                        \n                    }\n                    \n                }.bind(this)\n            )\n            \n        }\n        else {\n            \n            this.removeFromSuperview()\n            \n        }\n        \n        this.isVisible = NO\n        \n    }\n    \n    \n    \n    \n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        super.didReceiveBroadcastEvent(event)\n        \n        if (event.name == UICoreValues.broadcastEventName.WindowDidResize) {\n            \n            this.setNeedsLayout()\n            \n        }\n        \n    }\n    \n    \n    \n    \n    \n    layoutSubviews() {\n        \n        \n        if (!IS(this.view)) {\n            \n            return\n            \n        }\n        \n        //this.frame = this.superview.bounds;\n        \n        this.setPosition(0, 0, 0, 0, 0, \"100%\")\n        this.setPosition(0, 0, 0, 0, UIView.pageHeight, \"100%\")\n    \n        const bounds = this.bounds\n    \n        const margin = 20\n    \n        //this.view.centerInContainer();\n        \n        this.view.style.position = \"relative\"\n        \n        // this.view.style.maxHeight = \"\" + (bounds.height - margin * 2).integerValue + \"px\";\n        // this.view.style.maxWidth = \"\" + (bounds.width - margin * 2).integerValue + \"px\";\n        \n        \n        \n        \n        // var viewIntrinsicRectangle = this.view.intrinsicContentSize();\n        // this.view.frame = new UIRectangle((bounds.width - viewIntrinsicRectangle.width)*0.5,  )\n        \n        super.layoutSubviews()\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": "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",
  "names": []
}
