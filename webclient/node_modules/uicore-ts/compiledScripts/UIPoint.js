var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var UIPoint_exports = {};
__export(UIPoint_exports, {
  UIPoint: () => UIPoint
});
module.exports = __toCommonJS(UIPoint_exports);
var import_UIObject = require("./UIObject");
class UIPoint extends import_UIObject.UIObject {
  constructor(x, y) {
    super();
    this.x = x;
    this.y = y;
  }
  copy() {
    return new UIPoint(this.x, this.y);
  }
  isEqualTo(point) {
    const result = this.x == point.x && this.y == point.y;
    return result;
  }
  scale(zoom) {
    const x = this.x;
    const y = this.y;
    this.x = x * zoom;
    this.y = y * zoom;
    return this;
  }
  add(v) {
    this.x = this.x + v.x;
    this.y = this.y + v.y;
    return this;
  }
  subtract(v) {
    this.x = this.x - v.x;
    this.y = this.y - v.y;
    return this;
  }
  to(b) {
    const a = this;
    const ab = b.copy().add(a.copy().scale(-1));
    return ab;
  }
  pointWithX(x) {
    const result = this.copy();
    result.x = x;
    return result;
  }
  pointWithY(y) {
    const result = this.copy();
    result.y = y;
    return result;
  }
  pointByAddingX(x) {
    return this.pointWithX(this.x + x);
  }
  pointByAddingY(y) {
    return this.pointWithY(this.y + y);
  }
  get length() {
    var result = this.x * this.x + this.y * this.y;
    result = Math.sqrt(result);
    return result;
  }
  didChange(b) {
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  UIPoint
});
//# sourceMappingURL=UIPoint.js.map
