{
  "version": 3,
  "sources": ["../scripts/UIView.ts"],
  "sourcesContent": ["import { IS_FIREFOX, IS_SAFARI } from \"./ClientCheckers\"\nimport { UIColor } from \"./UIColor\"\nimport { UICoreValues } from \"./UICoreValues\"\nimport { UILocalizedTextObject } from \"./UIInterfaces\"\nimport { FIRST, IS, IS_DEFINED, IS_NIL, IS_NOT, nil, NO, UIObject, YES } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIRectangle } from \"./UIRectangle\"\nimport \"./UICoreExtensions\"\n\n\ndeclare module AutoLayout {\n    \n    \n    class Constraint {\n        \n        [key: string]: any\n        \n    }\n    \n    \n    class View {\n        \n        [key: string]: any\n        \n    }\n    \n    \n    class VisualFormat {\n        \n        static parse(arg0: any, arg1: any): any;\n        \n        [key: string]: any\n        \n    }\n    \n    \n    enum Attribute {\n        \n        LEFT, RIGHT, BOTTOM, TOP, CENTERX, CENTERY, WIDTH, HEIGHT, ZINDEX, VARIABLE, NOTANATTRIBUTE\n        \n    }\n    \n    \n    enum Relation {\n        \n        EQU, LEQ, GEQ\n        \n    }\n    \n    \n}\n\n// @ts-ignore\nif (!window.AutoLayout) {\n    \n    // @ts-ignore\n    window.AutoLayout = nil\n    \n}\n\n\n\ninterface LooseObject {\n    [key: string]: any\n}\n\n\nexport interface ControlEventTargetsObject {\n    \n    [key: string]: Function[];\n    \n}\n\n\nexport interface UIViewBroadcastEvent {\n    \n    name: string;\n    parameters: {\n        [key: string]: string | string[];\n    }\n    \n}\n\n\n\nexport type UIViewAddControlEventTargetObject<T extends typeof UIView.controlEvent> = {\n    \n    [K in keyof T]: ((sender: UIView, event: Event) => void) & Partial<UIViewAddControlEventTargetObject<T>>\n    \n}\n\n\n\n\n\nexport class UIView extends UIObject {\n    \n    _nativeSelectionEnabled: boolean = YES\n    _shouldLayout: boolean\n    _UITableViewRowIndex: number\n    _UITableViewReusabilityIdentifier: any\n    _UIViewIntrinsicTemporaryWidth: string\n    _UIViewIntrinsicTemporaryHeight: string\n    _enabled: boolean = YES\n    _frame: any\n    _backgroundColor: UIColor = UIColor.transparentColor\n    \n    _viewHTMLElement: HTMLElement & LooseObject\n    \n    _innerHTMLKey: string\n    _defaultInnerHTML: string\n    _parameters: { [x: string]: (string | UILocalizedTextObject) }\n    \n    _localizedTextObject: UILocalizedTextObject = nil\n    \n    _controlEventTargets: ControlEventTargetsObject = {} //{ \"PointerDown\": Function[]; \"PointerMove\": Function[]; \"PointerLeave\": Function[]; \"PointerEnter\": Function[]; \"PointerUpInside\": Function[]; \"PointerUp\": Function[]; \"PointerHover\": Function[]; };\n    _frameTransform: string\n    _viewControllerLayoutFunction: () => void = nil\n    _willLayoutSubviewsDelegateFunction: () => void = nil\n    _didLayoutSubviewsDelegateFunction: () => void = nil\n    _didReceiveBroadcastEventDelegateFunction: (event: UIViewBroadcastEvent) => void = nil\n    _updateLayoutFunction: any = nil\n    // @ts-ignore\n    _constraints: any[] //AutoLayout.Constraint[];\n    superview: UIView\n    subviews: UIView[]\n    _styleClasses: any[]\n    _isHidden: boolean = NO\n    \n    pausesPointerEvents: boolean = NO\n    stopsPointerEventPropagation: boolean = YES\n    _isPointerInside: boolean\n    _isPointerValid: boolean\n    _initialPointerPosition: UIPoint\n    _hasPointerDragged: boolean\n    _pointerDragThreshold = 2\n    \n    ignoresTouches: boolean = NO\n    ignoresMouse: boolean = NO\n    \n    \n    static _UIViewIndex: number = -1\n    _UIViewIndex: number\n    \n    static _viewsToLayout: UIView[] = []\n    \n    forceIntrinsicSizeZero: boolean = NO\n    _touchEventTime: number\n    \n    static _pageScale = 1\n    \n    constructor(\n        elementID: string = (\"UIView\" +\n            UIView.nextIndex),\n        viewHTMLElement: HTMLElement & LooseObject = null,\n        elementType: string = null,\n        initViewData?: any\n    ) {\n        \n        super()\n        \n        // Instance variables\n        \n        UIView._UIViewIndex = UIView.nextIndex\n        this._UIViewIndex = UIView._UIViewIndex\n        \n        this._styleClasses = []\n        // Object.defineProperty(this, \"styleClasses\", { get: this.styleClasses, set: this.setStyleClasses });\n        // Object.defineProperty(this, \"styleClassName\", { get: this.styleClassName });\n        \n        this._initViewHTMLElement(elementID, viewHTMLElement, elementType)\n        \n        this.subviews = []\n        this.superview = nil\n        \n        // Object.defineProperty(this, \"elementID\", { get: this.elementID });\n        \n        // Object.defineProperty(this, \"constraints\", { get: this.constraints, set: this.setConstraints });\n        this._constraints = []\n        \n        this._updateLayoutFunction = nil\n        \n        //Object.defineProperty(this, \"backgroundColor\", { get: this.backgroundColor, set: this.setBackgroundColor });\n        //this.backgroundColor = \"transparent\";\n        \n        // Object.defineProperty(this, \"alpha\", { get: this.alpha, set: this.setAlpha });\n        \n        // Object.defineProperty(this, \"frame\", { get: this.frame, set: this.setFrame });\n        // Object.defineProperty(this, \"bounds\", { get: this.bounds, set: this.setBounds });\n        \n        // Object.defineProperty(this, \"userInteractionEnabled\", { get: this.userInteractionEnabled, set: this.setUserInteractionEnabled });\n        \n        // this._controlEventTargets = {\n        //     \"PointerDown\": [],\n        //     \"PointerMove\": [],\n        //     \"PointerLeave\": [],\n        //     \"PointerEnter\": [],\n        //     \"PointerUpInside\": [],\n        //     \"PointerUp\": [],\n        //     \"PointerHover\": []\n        // }\n        \n        \n        this._frameTransform = \"\"\n        \n        this.initView(this.viewHTMLElement.id, this.viewHTMLElement, initViewData)\n        \n        this._initViewCSSSelectorsIfNeeded()\n        \n        this._loadUIEvents()\n        \n        \n        this.setNeedsLayout()\n        \n        \n    }\n    \n    \n    static get nextIndex() {\n        \n        return UIView._UIViewIndex + 1\n        \n    }\n    \n    static get pageHeight() {\n        \n        const body = document.body\n        const html = document.documentElement\n        \n        const height = Math.max(\n            body.scrollHeight,\n            body.offsetHeight,\n            html.clientHeight,\n            html.scrollHeight,\n            html.offsetHeight\n        )\n        \n        return height\n        \n    }\n    \n    static get pageWidth() {\n        \n        const body = document.body\n        const html = document.documentElement\n        \n        const width = Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth)\n        \n        return width\n        \n    }\n    \n    \n    \n    \n    \n    initView(elementID: string, viewHTMLElement: HTMLElement, initViewData?: any) {\n    \n    \n    \n    }\n    \n    \n    \n    \n    \n    centerInContainer() {\n        this.style.left = \"50%\"\n        this.style.top = \"50%\"\n        this.style.transform = \"translateX(-50%) translateY(-50%)\"\n    }\n    \n    centerXInContainer() {\n        this.style.left = \"50%\"\n        this.style.transform = \"translateX(-50%)\"\n    }\n    \n    centerYInContainer() {\n        this.style.top = \"50%\"\n        this.style.transform = \"translateY(-50%)\"\n    }\n    \n    \n    \n    _initViewHTMLElement(elementID, viewHTMLElement, elementType = \"div\") {\n        \n        \n        if (!IS(elementType)) {\n            \n            elementType = \"div\"\n            \n        }\n        \n        if (!IS(viewHTMLElement)) {\n            \n            this._viewHTMLElement = this.createElement(elementID, elementType)\n            \n            this.style.position = \"absolute\"\n            this.style.margin = \"0\"\n            \n        }\n        else {\n            \n            this._viewHTMLElement = viewHTMLElement\n            \n        }\n        \n        if (IS(elementID)) {\n            \n            \n            this.viewHTMLElement.id = elementID\n            \n            \n        }\n        \n        \n        this.viewHTMLElement.obeyAutolayout = YES\n        \n        this.viewHTMLElement.UIView = this\n        \n        this.addStyleClass(this.styleClassName)\n        \n    }\n    \n    \n    \n    set nativeSelectionEnabled(selectable: boolean) {\n        this._nativeSelectionEnabled = selectable\n        if (!selectable) {\n            this.style.cssText = this.style.cssText +\n                \" -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\"\n        }\n        else {\n            this.style.cssText = this.style.cssText +\n                \" -webkit-touch-callout: text; -webkit-user-select: text; -khtml-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text;\"\n        }\n    }\n    \n    \n    get nativeSelectionEnabled() {\n        return this._nativeSelectionEnabled\n    }\n    \n    \n    \n    get styleClassName() {\n        \n        const result = \"UICore_UIView_\" + this.class.name\n        \n        return result\n        \n    }\n    \n    _initViewCSSSelectorsIfNeeded() {\n        \n        if (!this.class._areViewCSSSelectorsInitialized) {\n            \n            this.initViewStyleSelectors()\n            \n            this.class._areViewCSSSelectorsInitialized = YES\n            \n        }\n        \n    }\n    \n    initViewStyleSelectors() {\n        \n        // Override this in a subclass\n        \n    }\n    \n    initStyleSelector(selector, style) {\n        \n        const styleRules = UIView.getStyleRules(selector)\n        \n        if (!styleRules) {\n            \n            UIView.createStyleSelector(selector, style)\n            \n        }\n        \n    }\n    \n    \n    createElement(elementID, elementType) {\n        let result = document.getElementById(elementID)\n        if (!result) {\n            result = document.createElement(elementType)\n        }\n        return result\n    }\n    \n    public get viewHTMLElement() {\n        return this._viewHTMLElement\n    }\n    \n    public get elementID() {\n        \n        return this.viewHTMLElement.id\n        \n    }\n    \n    \n    setInnerHTML(key: string, defaultString: string, parameters?: { [x: string]: string | UILocalizedTextObject }) {\n        \n        this._innerHTMLKey = key\n        this._defaultInnerHTML = defaultString\n        this._parameters = parameters\n        \n        const languageName = UICoreValues.languageService.currentLanguageKey\n        const result = UICoreValues.languageService.stringForKey(key, languageName, defaultString, parameters)\n        \n        this.innerHTML = result\n        \n    }\n    \n    \n    _setInnerHTMLFromKeyIfPossible() {\n        \n        if (this._innerHTMLKey && this._defaultInnerHTML) {\n            \n            this.setInnerHTML(this._innerHTMLKey, this._defaultInnerHTML, this._parameters)\n            \n        }\n        \n    }\n    \n    _setInnerHTMLFromLocalizedTextObjectIfPossible() {\n        \n        if (IS(this._localizedTextObject)) {\n            \n            this.innerHTML = UICoreValues.languageService.stringForCurrentLanguage(this._localizedTextObject)\n            \n        }\n        \n    }\n    \n    \n    get localizedTextObject() {\n        \n        return this._localizedTextObject\n        \n    }\n    \n    set localizedTextObject(localizedTextObject: UILocalizedTextObject) {\n        \n        this._localizedTextObject = localizedTextObject\n        \n        this._setInnerHTMLFromLocalizedTextObjectIfPossible()\n        \n    }\n    \n    \n    get innerHTML() {\n        return this.viewHTMLElement.innerHTML\n    }\n    \n    \n    set innerHTML(innerHTML) {\n        \n        if (this.innerHTML != innerHTML) {\n            \n            this.viewHTMLElement.innerHTML = FIRST(innerHTML, \"\")\n            \n        }\n        \n    }\n    \n    \n    \n    set hoverText(hoverText: string) {\n        this.viewHTMLElement.setAttribute(\"title\", hoverText)\n    }\n    \n    get hoverText() {\n        return this.viewHTMLElement.getAttribute(\"title\")\n    }\n    \n    \n    get scrollSize() {\n        \n        const result = new UIRectangle(0, 0, this.viewHTMLElement.scrollHeight, this.viewHTMLElement.scrollWidth)\n        \n        return result\n        \n    }\n    \n    \n    \n    get dialogView(): UIDialogView {\n        if (!IS(this.superview)) {\n            return nil\n        }\n        if (!(this[\"_isAUIDialogView\"])) {\n            return this.superview.dialogView\n        }\n        return this as any as UIDialogView\n    }\n    \n    \n    get rootView(): UIView {\n        if (IS(this.superview)) {\n            return this.superview.rootView\n        }\n        return this\n    }\n    \n    \n    public set enabled(enabled: boolean) {\n        this._enabled = enabled\n        this.updateContentForCurrentEnabledState()\n    }\n    \n    public get enabled(): boolean {\n        return this._enabled\n    }\n    \n    updateContentForCurrentEnabledState() {\n        this.hidden = !this.enabled\n        this.userInteractionEnabled = this.enabled\n    }\n    \n    \n    \n    \n    public get tabIndex(): number {\n        \n        return Number(this.viewHTMLElement.getAttribute(\"tabindex\"))\n        \n    }\n    \n    \n    public set tabIndex(index: number) {\n        \n        this.viewHTMLElement.setAttribute(\"tabindex\", \"\" + index)\n        \n    }\n    \n    \n    \n    \n    \n    get styleClasses() {\n        \n        return this._styleClasses\n        \n    }\n    \n    set styleClasses(styleClasses) {\n        \n        this._styleClasses = styleClasses\n        \n    }\n    \n    hasStyleClass(styleClass) {\n        \n        // This is for performance reasons\n        if (!IS(styleClass)) {\n            return NO\n        }\n        \n        const index = this.styleClasses.indexOf(styleClass)\n        if (index > -1) {\n            return YES\n        }\n        return NO\n        \n    }\n    \n    \n    \n    addStyleClass(styleClass: string) {\n        \n        if (!IS(styleClass)) {\n            return\n        }\n        \n        if (!this.hasStyleClass(styleClass)) {\n            this._styleClasses.push(styleClass)\n        }\n        \n    }\n    \n    removeStyleClass(styleClass: string) {\n        \n        // This is for performance reasons\n        if (!IS(styleClass)) {\n            return\n        }\n        \n        const index = this.styleClasses.indexOf(styleClass)\n        if (index > -1) {\n            \n            this.styleClasses.splice(index, 1)\n            \n        }\n        \n        \n    }\n    \n    \n    \n    static findViewWithElementID(elementID: string): UIView {\n        const viewHTMLElement = document.getElementById(elementID)\n        if (IS_NOT(viewHTMLElement)) {\n            return nil\n        }\n        // @ts-ignore\n        const result = viewHTMLElement.UIView\n        return result\n    }\n    \n    \n    \n    \n    static createStyleSelector(selector, style) {\n        \n        return\n        \n        // @ts-ignore\n        if (!document.styleSheets) {\n            return\n        }\n        if (document.getElementsByTagName(\"head\").length == 0) {\n            return\n        }\n        \n        var styleSheet\n        var mediaType\n        \n        if (document.styleSheets.length > 0) {\n            for (var i = 0, l: any = document.styleSheets.length; i < l; i++) {\n                if (document.styleSheets[i].disabled) {\n                    continue\n                }\n                const media = document.styleSheets[i].media\n                mediaType = typeof media\n                \n                if (mediaType === \"string\") {\n                    if (media as any === \"\" || ((media as any).indexOf(\"screen\") !== -1)) {\n                        styleSheet = document.styleSheets[i]\n                    }\n                }\n                else if (mediaType == \"object\") {\n                    if (media.mediaText === \"\" || (media.mediaText.indexOf(\"screen\") !== -1)) {\n                        styleSheet = document.styleSheets[i]\n                    }\n                }\n                \n                if (typeof styleSheet !== \"undefined\") {\n                    break\n                }\n            }\n        }\n        \n        if (typeof styleSheet === \"undefined\") {\n            const styleSheetElement = document.createElement(\"style\")\n            styleSheetElement.type = \"text/css\"\n            document.getElementsByTagName(\"head\")[0].appendChild(styleSheetElement)\n            \n            for (i = 0; i < document.styleSheets.length; i++) {\n                if (document.styleSheets[i].disabled) {\n                    continue\n                }\n                styleSheet = document.styleSheets[i]\n            }\n            \n            mediaType = typeof styleSheet.media\n        }\n        \n        if (mediaType === \"string\") {\n            for (var i = 0, l = styleSheet.rules.length; i < l; i++) {\n                if (styleSheet.rules[i].selectorText && styleSheet.rules[i].selectorText.toLowerCase() ==\n                    selector.toLowerCase()) {\n                    styleSheet.rules[i].style.cssText = style\n                    return\n                }\n            }\n            styleSheet.addRule(selector, style)\n        }\n        else if (mediaType === \"object\") {\n            \n            var styleSheetLength = 0\n            \n            try {\n                \n                styleSheetLength = (styleSheet.cssRules) ? styleSheet.cssRules.length : 0\n                \n            } catch (error) {\n                \n            }\n            \n            \n            for (var i = 0; i < styleSheetLength; i++) {\n                if (styleSheet.cssRules[i].selectorText && styleSheet.cssRules[i].selectorText.toLowerCase() ==\n                    selector.toLowerCase()) {\n                    styleSheet.cssRules[i].style.cssText = style\n                    return\n                }\n            }\n            styleSheet.insertRule(selector + \"{\" + style + \"}\", styleSheetLength)\n        }\n    }\n    \n    static getStyleRules(selector) {\n        var selector = selector.toLowerCase()\n        for (var i = 0; i < document.styleSheets.length; i++) {\n            const styleSheet = document.styleSheets[i] as any\n            var styleRules\n            \n            try {\n                \n                styleRules = styleSheet.cssRules ? styleSheet.cssRules : styleSheet.rules\n                \n            } catch (error) {\n                \n            }\n            \n            return styleRules\n        }\n    }\n    \n    \n    \n    get style() {\n        return this.viewHTMLElement.style\n    }\n    \n    get computedStyle() {\n        return getComputedStyle(this.viewHTMLElement)\n    }\n    \n    public get hidden(): boolean {\n        return this._isHidden\n    }\n    \n    \n    public set hidden(v: boolean) {\n        \n        this._isHidden = v\n        \n        if (this._isHidden) {\n            this.style.visibility = \"hidden\"\n        }\n        else {\n            this.style.visibility = \"visible\"\n        }\n        \n        \n    }\n    \n    static set pageScale(scale: number) {\n        \n        UIView._pageScale = scale\n        \n        const zoom = scale\n        const width = 100 / zoom\n        const viewHTMLElement = UICoreValues.main.rootViewController.view.viewHTMLElement\n        viewHTMLElement.style.transformOrigin = \"left top\"\n        viewHTMLElement.style.transform = \"scale(\" + zoom + \")\"\n        viewHTMLElement.style.width = width + \"%\"\n        \n    }\n    \n    static get pageScale() {\n        \n        return UIView._pageScale\n        \n    }\n    \n    \n    \n    \n    \n    calculateAndSetViewFrame() {\n        \n        // Use this method to calculate the frame for the view itself\n        \n        // This can be used when adding subviews to existing views like buttons\n        \n    }\n    \n    \n    \n    \n    \n    public get frame(): UIRectangle {\n        \n        // var result = new UIRectangle(1 * this.viewHTMLElement.offsetLeft, 1 * this.viewHTMLElement.offsetTop, 1 * this.viewHTMLElement.offsetHeight, 1 * this.viewHTMLElement.offsetWidth);\n        \n        // result.zIndex = 1 * this.style.zIndex;\n        \n        var result = this._frame\n        \n        if (!result) {\n            \n            result = new UIRectangle(1 * this.viewHTMLElement.offsetLeft, 1 * this.viewHTMLElement.offsetTop, 1 *\n                this.viewHTMLElement.offsetHeight, 1 * this.viewHTMLElement.offsetWidth)\n            result.zIndex = 0\n            \n        }\n        \n        return result.copy()\n        \n    }\n    \n    public set frame(rectangle: UIRectangle) {\n        \n        if (IS(rectangle)) {\n            this.setFrame(rectangle)\n        }\n        \n    }\n    \n    setFrame(rectangle, zIndex = 0, performUncheckedLayout = NO) {\n        \n        \n        const frame = this._frame || new UIRectangle(nil, nil, nil, nil)\n        \n        if (zIndex != undefined) {\n            rectangle.zIndex = zIndex\n        }\n        this._frame = rectangle\n        \n        // This is useless because frames are copied\n        // frame.didChange = function () {\n        //     // Do nothing\n        // }\n        // rectangle.didChange = function () {\n        //     this.frame = rectangle;\n        // }.bind(this);\n        \n        if (frame && frame.isEqualTo(rectangle) && !performUncheckedLayout) {\n            return\n        }\n        \n        \n        UIView._setAbsoluteSizeAndPosition(\n            this.viewHTMLElement,\n            rectangle.topLeft.x,\n            rectangle.topLeft.y,\n            rectangle.width,\n            rectangle.height,\n            rectangle.zIndex\n        )\n        \n        \n        if (frame.height != rectangle.height || frame.width != rectangle.width || performUncheckedLayout) {\n            \n            this.setNeedsLayout()\n            \n            this.boundsDidChange()\n            \n            //this.layoutSubviews();\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    get bounds() {\n        \n        var result: UIRectangle\n        \n        // if (IS_NOT(this._frame) && this.style.height == \"\" && this.style.width  == \"\" && this.style.left == \"\" && this.style.right == \"\" && this.style.bottom == \"\" && this.style.top == \"\") {\n        \n        //     result = new UIRectangle(0, 0, 0, 0)\n        \n        // }\n        // else\n        if (IS_NOT(this._frame)) {\n            \n            result = new UIRectangle(0, 0, 1 * this.viewHTMLElement.offsetHeight, 1 * this.viewHTMLElement.offsetWidth)\n            \n        }\n        else {\n            \n            result = this.frame.copy()\n            \n            result.x = 0\n            result.y = 0\n            \n        }\n        \n        return result\n        \n    }\n    \n    set bounds(rectangle) {\n        \n        const frame = this.frame\n        \n        this.frame = new UIRectangle(frame.topLeft.x, frame.topLeft.y, rectangle.height, rectangle.width)\n        \n    }\n    \n    \n    boundsDidChange() {\n        \n        \n        \n    }\n    \n    \n    setPosition(\n        left: number | string = nil,\n        right: number | string = nil,\n        bottom: number | string = nil,\n        top: number | string = nil,\n        height: number | string = nil,\n        width: number | string = nil\n    ) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"left\", left)\n        this.setStyleProperty(\"right\", right)\n        this.setStyleProperty(\"bottom\", bottom)\n        this.setStyleProperty(\"top\", top)\n        this.setStyleProperty(\"height\", height)\n        this.setStyleProperty(\"width\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setSizes(height?: number | string, width?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"height\", height)\n        this.setStyleProperty(\"width\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMinSizes(height?: number | string, width?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"minHeight\", height)\n        this.setStyleProperty(\"minWidth\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMaxSizes(height?: number | string, width?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"maxHeight\", height)\n        this.setStyleProperty(\"maxWidth\", width)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMargin(margin?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"margin\", margin)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setMargins(left?: number | string, right?: number | string, bottom?: number | string, top?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"marginLeft\", left)\n        this.setStyleProperty(\"marginRight\", right)\n        this.setStyleProperty(\"marginBottom\", bottom)\n        this.setStyleProperty(\"marginTop\", top)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setPadding(padding?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"padding\", padding)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    setPaddings(left?: number | string, right?: number | string, bottom?: number | string, top?: number | string) {\n        \n        const previousBounds = this.bounds\n        \n        this.setStyleProperty(\"paddingLeft\", left)\n        this.setStyleProperty(\"paddingRight\", right)\n        this.setStyleProperty(\"paddingBottom\", bottom)\n        this.setStyleProperty(\"paddingTop\", top)\n        \n        const bounds = this.bounds\n        if (bounds.height != previousBounds.height || bounds.width != previousBounds.width) {\n            this.setNeedsLayout()\n            this.boundsDidChange()\n        }\n        \n    }\n    \n    \n    \n    \n    \n    setBorder(\n        radius: number | string = nil,\n        width: number | string = 1,\n        color: UIColor = UIColor.blackColor,\n        style: string = \"solid\"\n    ) {\n        \n        this.setStyleProperty(\"borderStyle\", style)\n        \n        this.setStyleProperty(\"borderRadius\", radius)\n        \n        this.setStyleProperty(\"borderColor\", color.stringValue)\n        \n        this.setStyleProperty(\"borderWidth\", width)\n        \n    }\n    \n    \n    \n    \n    \n    setStyleProperty(propertyName: string, value?: number | string) {\n        \n        \n        try {\n            \n            if (IS_NIL(value)) {\n                return\n            }\n            if (IS_DEFINED(value) && (value as Number).isANumber) {\n                value = \"\" + (value as number).integerValue + \"px\"\n            }\n            this.style[propertyName] = value\n            \n        } catch (exception) {\n            \n            console.log(exception)\n            \n        }\n        \n        \n    }\n    \n    \n    \n    get userInteractionEnabled() {\n        \n        const result = (this.style.pointerEvents != \"none\")\n        \n        return result\n        \n    }\n    \n    set userInteractionEnabled(userInteractionEnabled) {\n        \n        if (userInteractionEnabled) {\n            \n            this.style.pointerEvents = \"\"\n            \n        }\n        else {\n            \n            this.style.pointerEvents = \"none\"\n            \n        }\n        \n    }\n    \n    \n    \n    get backgroundColor() {\n        return this._backgroundColor\n    }\n    \n    set backgroundColor(backgroundColor: UIColor) {\n        \n        this._backgroundColor = backgroundColor\n        \n        this.style.backgroundColor = backgroundColor.stringValue\n        \n    }\n    \n    \n    \n    get alpha() {\n        return 1 * (this.style.opacity as any)\n    }\n    \n    set alpha(alpha) {\n        this.style.opacity = \"\" + alpha\n    }\n    \n    \n    \n    \n    \n    static animateViewOrViewsWithDurationDelayAndFunction(\n        viewOrViews: UIView | HTMLElement | UIView[] | HTMLElement[],\n        duration: number,\n        delay: number,\n        timingStyle = \"cubic-bezier(0.25,0.1,0.25,1)\",\n        transformFunction: Function,\n        transitioncompletionFunction: Function\n    ) {\n        \n        \n        function callTransitioncompletionFunction() {\n            \n            (transitioncompletionFunction || nil)();\n            \n            (viewOrViews as UIView[]).forEach(function (view, index, array) {\n                \n                view.animationDidFinish()\n                \n            })\n            \n        }\n        \n        \n        if (IS_FIREFOX) {\n            \n            // Firefox does not fire the transition completion event properly\n            new UIObject().performFunctionWithDelay(delay + duration, callTransitioncompletionFunction)\n            \n            \n            \n        }\n        \n        \n        if (!(viewOrViews instanceof Array)) {\n            viewOrViews = [viewOrViews] as any\n        }\n        \n        const transitionStyles = []\n        const transitionDurations = []\n        const transitionDelays = []\n        const transitionTimings = []\n        \n        for (var i = 0; i < (viewOrViews as any).length; i++) {\n            \n            var view = viewOrViews[i]\n            \n            if (view.viewHTMLElement) {\n                \n                view = view.viewHTMLElement\n                \n            }\n            \n            view.addEventListener(\"transitionend\", transitionDidFinish, true)\n            \n            transitionStyles.push(view.style.transition)\n            transitionDurations.push(view.style.transitionDuration)\n            transitionDelays.push(view.style.transitionDelay)\n            transitionTimings.push(view.style.transitionTimingFunction)\n            \n            view.style.transition = \"all\"\n            view.style.transitionDuration = \"\" + duration + \"s\"\n            view.style.transitionDelay = \"\" + delay + \"s\"\n            view.style.transitionTimingFunction = timingStyle\n            \n        }\n        \n        \n        \n        transformFunction()\n        \n        \n        const transitionObject = {\n            \n            \"finishImmediately\": finishTransitionImmediately,\n            \"didFinish\": transitionDidFinishManually,\n            \"views\": viewOrViews,\n            \"registrationTime\": Date.now()\n            \n        }\n        \n        function finishTransitionImmediately() {\n            for (var i = 0; i < (viewOrViews as any).length; i++) {\n                var view = viewOrViews[i]\n                if (view.viewHTMLElement) {\n                    view = view.viewHTMLElement\n                }\n                view.style.transition = \"all\"\n                view.style.transitionDuration = \"\" + duration + \"s\"\n                view.style.transitionDelay = \"\" + delay + \"s\"\n                view.style.transition = transitionStyles[i]\n                view.style.transitionDuration = transitionDurations[i]\n                view.style.transitionDelay = transitionDelays[i]\n                view.style.transitionTimingFunction = transitionTimings[i]\n            }\n        }\n        \n        function transitionDidFinish(event) {\n            var view = event.srcElement\n            if (!view) {\n                return\n            }\n            if (view.viewHTMLElement) {\n                view = view.viewHTMLElement\n            }\n            view.style.transition = transitionStyles[i]\n            view.style.transitionDuration = transitionDurations[i]\n            view.style.transitionDelay = transitionDelays[i]\n            view.style.transitionTimingFunction = transitionTimings[i]\n            \n            callTransitioncompletionFunction()\n            \n            view.removeEventListener(\"transitionend\", transitionDidFinish, true)\n            \n        }\n        \n        function transitionDidFinishManually() {\n            for (var i = 0; i < (viewOrViews as any).length; i++) {\n                \n                var view = viewOrViews[i]\n                \n                if (view.viewHTMLElement) {\n                    view = view.viewHTMLElement\n                }\n                \n                view.style.transition = transitionStyles[i]\n                view.style.transitionDuration = transitionDurations[i]\n                view.style.transitionDelay = transitionDelays[i]\n                view.style.transitionTimingFunction = transitionTimings[i]\n                \n                view.removeEventListener(\"transitionend\", transitionDidFinish, true)\n                \n            }\n            \n            \n            \n        }\n        \n        return transitionObject\n        \n    }\n    \n    \n    \n    \n    \n    animationDidFinish() {\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    static _transformAttribute = ((\"transform\" in document.documentElement.style) ? \"transform\" : undefined) ||\n        ((\"-webkit-transform\" in document.documentElement.style) ? \"-webkit-transform\" : \"undefined\") ||\n        ((\"-moz-transform\" in document.documentElement.style) ? \"-moz-transform\" : \"undefined\") ||\n        ((\"-ms-transform\" in document.documentElement.style) ? \"-ms-transform\" : \"undefined\") ||\n        ((\"-o-transform\" in document.documentElement.style) ? \"-o-transform\" : \"undefined\")\n    \n    static _setAbsoluteSizeAndPosition(element, left, top, width, height, zIndex = 0) {\n        \n        // if (!UIView._transformAttribute) {\n        \n        //     UIView._transformAttribute = (('transform' in document.documentElement.style) ? 'transform' : undefined);\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-webkit-transform' in document.documentElement.style) ? '-webkit-transform' : 'undefined');\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-moz-transform' in document.documentElement.style) ? '-moz-transform' : 'undefined');\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-ms-transform' in document.documentElement.style) ? '-ms-transform' : 'undefined');\n        //     UIView._transformAttribute = UIView._transformAttribute || (('-o-transform' in document.documentElement.style) ? '-o-transform' : 'undefined');\n        \n        // }\n        \n        if (!IS(element) || !element.obeyAutolayout && !element.getAttribute(\"obeyAutolayout\")) {\n            return\n        }\n        \n        if (element.id == \"mainView\") {\n            \n            \n            var asd = 1\n            \n        }\n        \n        if (IS(height)) {\n            height = height.integerValue + \"px\"\n        }\n        \n        if (IS(width)) {\n            width = width.integerValue + \"px\"\n        }\n        \n        var str = element.style.cssText\n        \n        const frameTransform = UIView._transformAttribute + \": translate3d(\" + (1 * left).integerValue + \"px, \" +\n            (1 * top).integerValue + \"px, \" + zIndex.integerValue + \"px)\"\n        \n        if (element.UIView) {\n            str = str + frameTransform + \";\"\n        }\n        else {\n            element.UIView._frameTransform = frameTransform\n        }\n        \n        if (height == nil) {\n            str = str + \" height: unset;\"\n        }\n        else {\n            str = str + \" height:\" + height + \";\"\n        }\n        \n        if (width == nil) {\n            str = str + \" width: unset;\"\n        }\n        else {\n            str = str + \" width:\" + width + \";\"\n        }\n        \n        if (element.id == \"mainView\") {\n            \n            \n            var asd = 1\n            \n        }\n        \n        element.style.cssText = element.style.cssText + str\n        \n    }\n    \n    \n    \n    static performAutoLayout(parentElement, visualFormatArray, constraintsArray) {\n        \n        \n        const view = new AutoLayout.View()\n        \n        if (IS(visualFormatArray) && IS(visualFormatArray.length)) {\n            view.addConstraints(AutoLayout.VisualFormat.parse(visualFormatArray, { extended: true }))\n        }\n        \n        if (IS(constraintsArray) && IS(constraintsArray.length)) {\n            view.addConstraints(constraintsArray)\n        }\n        \n        const elements = {}\n        for (var key in view.subViews) {\n            \n            if (!view.subViews.hasOwnProperty(key)) {\n                continue\n            }\n            \n            var element = nil\n            \n            try {\n                \n                element = parentElement.querySelector(\"#\" + key)\n                \n            } catch (error) {\n                \n                //console.log(\"Error occurred \" + error);\n                \n            }\n            \n            if (element && !element.obeyAutolayout && !element.getAttribute(\"obeyAutolayout\")) {\n            \n            \n            \n            }\n            else if (element) {\n                \n                element.className += element.className ? \" abs\" : \"abs\"\n                elements[key] = element\n                \n            }\n            \n        }\n        \n        var parentUIView = nil\n        \n        if (parentElement.UIView) {\n            \n            parentUIView = parentElement.UIView\n            \n        }\n        \n        const updateLayout = function () {\n            view.setSize(\n                parentElement ? parentElement.clientWidth : window.innerWidth,\n                parentElement ? parentElement.clientHeight : window.innerHeight\n            )\n            for (key in view.subViews) {\n                \n                if (!view.subViews.hasOwnProperty(key)) {\n                    continue\n                }\n                \n                const subView = view.subViews[key]\n                \n                if (elements[key]) {\n                    UIView._setAbsoluteSizeAndPosition(\n                        elements[key],\n                        subView.left,\n                        subView.top,\n                        subView.width,\n                        subView.height\n                    )\n                }\n            }\n            \n            parentUIView.didLayoutSubviews()\n            \n        }\n        \n        updateLayout()\n        return updateLayout\n        \n    }\n    \n    \n    static runFunctionBeforeNextFrame(step: () => void) {\n        \n        if (IS_SAFARI) {\n            \n            // This creates a microtask\n            Promise.resolve().then(step)\n            \n        }\n        else {\n            \n            window.requestAnimationFrame(step)\n            \n        }\n        \n    }\n    \n    \n    static scheduleLayoutViewsIfNeeded() {\n        \n        UIView.runFunctionBeforeNextFrame(UIView.layoutViewsIfNeeded)\n        \n    }\n    \n    \n    static layoutViewsIfNeeded() {\n        for (var i = 0; i < UIView._viewsToLayout.length; i++) {\n            const view = UIView._viewsToLayout[i]\n            view.layoutIfNeeded()\n        }\n        UIView._viewsToLayout = []\n    }\n    \n    \n    setNeedsLayout() {\n        \n        if (this._shouldLayout) {\n            return\n        }\n        \n        this._shouldLayout = YES\n        \n        // Register view for layout before next frame\n        UIView._viewsToLayout.push(this)\n        \n        if (UIView._viewsToLayout.length == 1) {\n            UIView.scheduleLayoutViewsIfNeeded()\n        }\n        \n    }\n    \n    \n    get needsLayout() {\n        \n        return this._shouldLayout\n        \n    }\n    \n    \n    layoutIfNeeded() {\n        \n        if (!this._shouldLayout) {\n            return\n        }\n        \n        this._shouldLayout = NO\n        \n        try {\n            \n            this.layoutSubviews()\n            \n        } catch (exception) {\n            \n            console.log(exception)\n            \n        }\n        \n    }\n    \n    \n    layoutSubviews() {\n        \n        this.willLayoutSubviews()\n        \n        this._shouldLayout = NO\n        \n        // Autolayout\n        if (this.constraints.length) {\n            this._updateLayoutFunction = UIView.performAutoLayout(this.viewHTMLElement, null, this.constraints)\n        }\n        this._updateLayoutFunction()\n        \n        this._viewControllerLayoutFunction()\n        \n        this.applyClassesAndStyles()\n        \n        for (let i = 0; i < this.subviews.length; i++) {\n            \n            const subview = this.subviews[i]\n            subview.calculateAndSetViewFrame()\n            \n        }\n        \n        this.didLayoutSubviews()\n        \n    }\n    \n    \n    \n    applyClassesAndStyles() {\n        \n        \n        \n        //var classesString = \"\";\n        \n        for (var i = 0; i < this.styleClasses.length; i++) {\n            \n            const styleClass = this.styleClasses[i]\n            \n            if (styleClass) {\n                \n                this.viewHTMLElement.classList.add(styleClass)\n                \n            }\n            \n            \n            \n            //classesString = classesString + \" \" + styleClass;\n            \n        }\n        \n        \n        //this.viewHTMLElement.className = classesString;\n        \n        \n        \n    }\n    \n    willLayoutSubviews() {\n        \n        this._willLayoutSubviewsDelegateFunction()\n        \n    }\n    \n    didLayoutSubviews() {\n        \n        this._didLayoutSubviewsDelegateFunction()\n        \n    }\n    \n    get constraints() {\n        return this._constraints\n    }\n    \n    set constraints(constraints) {\n        this._constraints = constraints\n    }\n    \n    addConstraint(constraint) {\n        \n        this.constraints.push(constraint)\n        \n    }\n    \n    \n    \n    addConstraintsWithVisualFormat(visualFormatArray) {\n        \n        this.constraints = this.constraints.concat(AutoLayout.VisualFormat.parse(\n            visualFormatArray,\n            { extended: true }\n        ))\n        \n    }\n    \n    static constraintWithView(view, attribute, relation, toView, toAttribute, multiplier, constant, priority) {\n        \n        var UIViewObject = nil\n        var viewID = null\n        if (view) {\n            if (view.isKindOfClass && view.isKindOfClass(UIView)) {\n                UIViewObject = view\n                view = view.viewHTMLElement\n            }\n            viewID = view.id\n        }\n        \n        var toUIViewObject = nil\n        var toViewID = null\n        if (toView) {\n            if (toView.isKindOfClass && view.isKindOfClass(UIView)) {\n                toUIViewObject = toView\n                toView = toView.viewHTMLElement\n            }\n            toViewID = toView.id\n        }\n        \n        const constraint = {\n            \n            view1: viewID,\n            attr1: attribute,\n            relation: relation,\n            view2: toViewID,\n            attr2: toAttribute,\n            multiplier: multiplier,\n            constant: constant,\n            priority: priority\n            \n        }\n        \n        return constraint\n        \n    }\n    \n    static constraintAttribute = {\n        \n        \"left\": AutoLayout.Attribute.LEFT,\n        \"right\": AutoLayout.Attribute.RIGHT,\n        \"bottom\": AutoLayout.Attribute.BOTTOM,\n        \"top\": AutoLayout.Attribute.TOP,\n        \"centerX\": AutoLayout.Attribute.CENTERX,\n        \"centerY\": AutoLayout.Attribute.CENTERY,\n        \"height\": AutoLayout.Attribute.HEIGHT,\n        \"width\": AutoLayout.Attribute.WIDTH,\n        \"zIndex\": AutoLayout.Attribute.ZINDEX,\n        // Not sure what these are for\n        \"constant\": AutoLayout.Attribute.NOTANATTRIBUTE,\n        \"variable\": AutoLayout.Attribute.VARIABLE\n        \n    }\n    \n    static constraintRelation = {\n        \n        \"equal\": AutoLayout.Relation.EQU,\n        \"lessThanOrEqual\": AutoLayout.Relation.LEQ,\n        \"greaterThanOrEqual\": AutoLayout.Relation.GEQ\n        \n    }\n    \n    \n    \n    subviewWithID(viewID) {\n        \n        \n        var resultHTMLElement = nil\n        \n        try {\n            \n            resultHTMLElement = this.viewHTMLElement.querySelector(\"#\" + viewID)\n            \n        } catch (error) {\n        \n        }\n        \n        if (resultHTMLElement && resultHTMLElement.UIView) {\n            return resultHTMLElement.UIView\n        }\n        return nil\n    }\n    \n    \n    \n    rectangleContainingSubviews() {\n        \n        const center = this.bounds.center\n        \n        var result = new UIRectangle(center.x, center.y, 0, 0)\n        \n        for (var i = 0; i < this.subviews.length; i++) {\n            \n            const subview = this.subviews[i]\n            \n            var frame = subview.frame\n            \n            const rectangleContainingSubviews = subview.rectangleContainingSubviews()\n            \n            frame = frame.concatenateWithRectangle(rectangleContainingSubviews)\n            \n            result = result.concatenateWithRectangle(frame)\n            \n        }\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    hasSubview(view: UIView) {\n        \n        // This is for performance reasons\n        if (!IS(view)) {\n            return NO\n        }\n        \n        for (var i = 0; i < this.subviews.length; i++) {\n            const subview = this.subviews[i]\n            if (subview == view) {\n                return YES\n            }\n        }\n        return NO\n    }\n    \n    get viewBelowThisView() {\n        const result: UIView = (this.viewHTMLElement.previousElementSibling as any || {}).UIView\n        return result\n    }\n    \n    get viewAboveThisView() {\n        const result: UIView = (this.viewHTMLElement.nextElementSibling as any || {}).UIView\n        return result\n    }\n    \n    addSubview(view: UIView, aboveView?: UIView) {\n        \n        if (!this.hasSubview(view) && IS(view)) {\n            \n            view.willMoveToSuperview(this)\n            \n            if (IS(aboveView)) {\n                this.viewHTMLElement.insertBefore(view.viewHTMLElement, aboveView.viewHTMLElement.nextSibling)\n                this.subviews.insertElementAtIndex(this.subviews.indexOf(aboveView), view)\n            }\n            else {\n                this.viewHTMLElement.appendChild(view.viewHTMLElement)\n                this.subviews.push(view)\n            }\n            view.didMoveToSuperview(this)\n            \n            if (this.superview && this.isMemberOfViewTree) {\n                \n                view.broadcastEventInSubtree({\n                    \n                    name: UIView.broadcastEventName.AddedToViewTree,\n                    parameters: nil\n                    \n                })\n                \n            }\n            \n            this.setNeedsLayout()\n            \n        }\n        \n    }\n    \n    addSubviews(views: UIView[]) {\n        views.forEach(function (this: UIView, view: UIView, index, array) {\n            this.addSubview(view)\n        }, this)\n    }\n    \n    \n    moveToBottomOfSuperview() {\n        \n        if (IS(this.superview)) {\n            \n            const bottomView = this.superview.subviews.firstElement\n            \n            if (bottomView == this) {\n                \n                return\n                \n            }\n            \n            this.superview.subviews.removeElement(this)\n            \n            this.superview.subviews.insertElementAtIndex(0, this)\n            \n            this.superview.viewHTMLElement.insertBefore(this.viewHTMLElement, bottomView.viewHTMLElement)\n            \n            \n        }\n        \n        \n        \n    }\n    \n    moveToTopOfSuperview() {\n        \n        if (IS(this.superview)) {\n            \n            const topView = this.superview.subviews.lastElement\n            \n            if (topView == this) {\n                \n                return\n                \n            }\n            \n            this.superview.subviews.removeElement(this)\n            \n            this.superview.subviews.push(this)\n            \n            this.superview.viewHTMLElement.appendChild(this.viewHTMLElement)\n            \n            \n        }\n        \n        \n        \n    }\n    \n    \n    removeFromSuperview() {\n        if (IS(this.superview)) {\n            \n            this.forEachViewInSubtree(function (view) {\n                \n                view.blur()\n                \n            })\n            \n            const index = this.superview.subviews.indexOf(this)\n            if (index > -1) {\n                this.superview.subviews.splice(index, 1)\n                this.superview.viewHTMLElement.removeChild(this.viewHTMLElement)\n                this.superview = nil\n                \n                this.broadcastEventInSubtree({\n                    \n                    name: UIView.broadcastEventName.RemovedFromViewTree,\n                    parameters: nil\n                    \n                })\n                \n            }\n        }\n    }\n    \n    \n    willAppear() {\n        \n        \n        \n    }\n    \n    \n    \n    willMoveToSuperview(superview: UIView) {\n        \n        this._setInnerHTMLFromKeyIfPossible()\n        \n        this._setInnerHTMLFromLocalizedTextObjectIfPossible()\n        \n    }\n    \n    didMoveToSuperview(superview: UIView) {\n        \n        this.superview = superview\n        \n    }\n    \n    wasAddedToViewTree() {\n        \n    }\n    \n    wasRemovedFromViewTree() {\n        \n    }\n    \n    get isMemberOfViewTree() {\n        var element = this.viewHTMLElement\n        for (var i = 0; element; i = i) {\n            if (element.parentElement && element.parentElement == document.body) {\n                return YES\n            }\n            element = element.parentElement\n        }\n        return NO\n    }\n    \n    \n    get allSuperviews() {\n        const result = []\n        var view: UIView = this\n        for (var i = 0; IS(view); i = i) {\n            result.push(view)\n            view = view.superview\n        }\n        return result\n    }\n    \n    \n    setNeedsLayoutOnAllSuperviews() {\n        \n        this.allSuperviews.reverse().forEach(function (view: UIView, index, array) {\n            \n            view.setNeedsLayout()\n            \n        })\n        \n    }\n    \n    \n    setNeedsLayoutUpToRootView() {\n        \n        this.setNeedsLayoutOnAllSuperviews()\n        \n        this.setNeedsLayout()\n        \n    }\n    \n    \n    focus() {\n        \n        this.viewHTMLElement.focus()\n        \n    }\n    \n    \n    blur() {\n        \n        this.viewHTMLElement.blur()\n        \n    }\n    \n    \n    \n    \n    \n    _loadUIEvents() {\n        \n        //this.viewHTMLElement = nil;\n        \n        \n        const isTouchEventClassDefined: boolean = NO || (window as any).TouchEvent\n        \n        const pauseEvent = (event: Event, forced = NO) => {\n            \n            if (this.pausesPointerEvents || forced) {\n                \n                if (event.stopPropagation) {\n                    event.stopPropagation()\n                }\n                if (event.preventDefault) {\n                    event.preventDefault()\n                }\n                event.cancelBubble = true\n                event.returnValue = false\n                return false\n                \n            }\n            \n            if (event.stopPropagation && this.stopsPointerEventPropagation) {\n                event.stopPropagation()\n            }\n            \n        }\n        \n        const onMouseDown = (event) => {\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                ((this.ignoresMouse || (IS(this._touchEventTime) && (Date.now() - this._touchEventTime) > 500)) &&\n                    event instanceof MouseEvent)) {\n                return\n            }\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerDown, event)\n            \n            this._isPointerInside = YES\n            this._isPointerValid = YES\n            this._initialPointerPosition = new UIPoint(event.clientX, event.clientY)\n            if (isTouchEventClassDefined && event instanceof TouchEvent) {\n                \n                this._touchEventTime = Date.now()\n                \n                this._initialPointerPosition = new UIPoint(event.touches[0].clientX, event.touches[0].clientY)\n                \n                if (event.touches.length > 1) {\n                    \n                    onTouchCancel(event)\n                    \n                    return\n                    \n                }\n                \n                \n            }\n            else {\n                \n                this._touchEventTime = nil\n                \n                pauseEvent(event)\n                \n            }\n            \n            \n            this._hasPointerDragged = NO\n            \n        }\n        \n        const onTouchStart = onMouseDown as any\n        \n        const onmouseup = (event) => {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            if (this._isPointerInside) {\n                \n                onPointerUpInside(event)\n                \n                if (!this._hasPointerDragged) {\n                    \n                    this.sendControlEventForKey(UIView.controlEvent.PointerTap, event)\n                    \n                }\n                \n                \n            }\n            \n            // This has to be sent after the more specific event so that UIButton can ignore it when not highlighted\n            this.sendControlEventForKey(UIView.controlEvent.PointerUp, event)\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onTouchEnd = onmouseup\n        \n        // function onMouseEnter(event) {\n        \n        //     this.sendControlEventForKey(UIView.controlEvent.PointerEnter, event);\n        \n        //     this._isPointerInside = YES;\n        \n        //     pauseEvent(event);\n        \n        // }\n        \n        const onmouseout = (event) => {\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerLeave, event)\n            \n            this._isPointerInside = NO\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onTouchLeave = onmouseout\n        \n        var onTouchCancel = function (event) {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            this._isPointerValid = NO\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerCancel, event)\n            \n        }.bind(this)\n        \n        const onmouseover = (event) => {\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerHover, event)\n            \n            this._isPointerInside = YES\n            \n            this._isPointerValid = YES\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onMouseMove = (event) => {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            if (IS_NOT(this._initialPointerPosition)) {\n                \n                this._initialPointerPosition = new UIPoint(event.clientX, event.clientY)\n                \n            }\n            \n            if (new UIPoint(event.clientX, event.clientY).to(this._initialPointerPosition).length >\n                this._pointerDragThreshold) {\n                \n                this._hasPointerDragged = YES\n                \n            }\n            \n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerMove, event)\n            \n            pauseEvent(event)\n            \n        }\n        \n        const onTouchMove = function (event: TouchEvent) {\n            \n            if (!this._isPointerValid) {\n                return\n            }\n            \n            if ((this.ignoresTouches && isTouchEventClassDefined && event instanceof TouchEvent) ||\n                (this.ignoresMouse && event instanceof MouseEvent)) {\n                return\n            }\n            \n            if (event.touches.length > 1) {\n                \n                onTouchZoom(event)\n                \n                return\n                \n            }\n            \n            const touch = event.touches[0]\n            \n            if (new UIPoint(touch.clientX, touch.clientY).to(this._initialPointerPosition).length >\n                this._pointerDragThreshold) {\n                \n                this._hasPointerDragged = YES\n                \n            }\n            \n            \n            if (this._isPointerInside && this.viewHTMLElement !=\n                document.elementFromPoint(touch.clientX, touch.clientY)) {\n                \n                this._isPointerInside = NO\n                \n                this.sendControlEventForKey(UIView.controlEvent.PointerLeave, event)\n                \n            }\n            \n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerMove, event)\n            \n            //pauseEvent(event);\n            \n            \n        }\n        \n        var onTouchZoom = function onTouchZoom(event: TouchEvent) {\n            \n            this.sendControlEventForKey(UIView.controlEvent.MultipleTouches, event)\n            \n        }.bind(this)\n        \n        \n        var onPointerUpInside = (event) => {\n            pauseEvent(event)\n            \n            this.sendControlEventForKey(UIView.controlEvent.PointerUpInside, event)\n        }\n        \n        function eventKeyIsEnter(event) {\n            if (event.keyCode !== 13) {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsTab(event) {\n            if (event.keyCode !== 9) {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsEsc(event) {\n            var result = false\n            if (\"key\" in event) {\n                result = (event.key == \"Escape\" || event.key == \"Esc\")\n            }\n            else {\n                result = (event.keyCode == 27)\n            }\n            return result\n        }\n        \n        function eventKeyIsLeft(event) {\n            if (event.keyCode != \"37\") {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsRight(event) {\n            if (event.keyCode != \"39\") {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsDown(event) {\n            if (event.keyCode != \"40\") {\n                return NO\n            }\n            return YES\n        }\n        \n        function eventKeyIsUp(event) {\n            if (event.keyCode != \"38\") {\n                return NO\n            }\n            return YES\n        }\n        \n        const onKeyDown = function (event) {\n            \n            if (eventKeyIsEnter(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.EnterDown, event)\n                \n            }\n            \n            if (eventKeyIsEsc(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.EscDown, event)\n                \n            }\n            \n            if (eventKeyIsTab(event) && this._controlEventTargets.TabDown && this._controlEventTargets.TabDown.length) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.TabDown, event)\n                \n                pauseEvent(event, YES)\n                \n            }\n            \n            if (eventKeyIsLeft(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.LeftArrowDown, event)\n                \n            }\n            \n            if (eventKeyIsRight(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.RightArrowDown, event)\n                \n            }\n            \n            if (eventKeyIsDown(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.DownArrowDown, event)\n                \n            }\n            \n            if (eventKeyIsUp(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.UpArrowDown, event)\n                \n            }\n            \n        }.bind(this)\n        \n        const onKeyUp = function (event) {\n            \n            if (eventKeyIsEnter(event)) {\n                \n                this.sendControlEventForKey(UIView.controlEvent.EnterUp, event)\n                \n            }\n            \n        }.bind(this)\n        \n        \n        const onfocus = function (event: Event) {\n            \n            this.sendControlEventForKey(UIView.controlEvent.Focus, event)\n            \n        }.bind(this)\n        \n        const onblur = function (event: Event) {\n            \n            this.sendControlEventForKey(UIView.controlEvent.Blur, event)\n            \n        }.bind(this)\n        \n        \n        // Mouse and touch start events\n        this._viewHTMLElement.onmousedown = onMouseDown.bind(this)\n        this._viewHTMLElement.ontouchstart = onTouchStart.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mousedown\", onMouseDown.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchstart', onTouchStart.bind(this), false)\n        // //this.viewHTMLElement.addEventListener(\"mouseenter\", onMouseEnter.bind(this), false);\n        \n        // Mouse and touch move events\n        this._viewHTMLElement.onmousemove = onMouseMove.bind(this)\n        this._viewHTMLElement.ontouchmove = onTouchMove.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mousemove\", onMouseMove.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchmove', onTouchMove.bind(this), false)\n        \n        //this.viewHTMLElement.addEventListener(\"mousewheel\", onmousewheel.bind(this), false)\n        \n        this._viewHTMLElement.onmouseover = onmouseover.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mouseover\", onmouseover.bind(this), false)\n        \n        // Mouse and touch end events\n        this._viewHTMLElement.onmouseup = onmouseup.bind(this)\n        this._viewHTMLElement.ontouchend = onTouchEnd.bind(this)\n        this._viewHTMLElement.ontouchcancel = onTouchCancel.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mouseup\", onmouseup.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchend', onTouchEnd.bind(this), false)\n        // this.viewHTMLElement.addEventListener('touchcancel', onTouchCancel.bind(this), false)\n        \n        this._viewHTMLElement.onmouseout = onmouseout.bind(this)\n        // this.viewHTMLElement.addEventListener(\"mouseout\", onmouseout.bind(this), false)\n        this._viewHTMLElement.addEventListener(\"touchleave\", onTouchLeave.bind(this), false)\n        \n        // this.viewHTMLElement.onkeydown = onkeydown\n        // this.viewHTMLElement.onkeyup = onkeyup\n        this._viewHTMLElement.addEventListener(\"keydown\", onKeyDown, false)\n        this._viewHTMLElement.addEventListener(\"keyup\", onKeyUp, false)\n        \n        // Focus events\n        this._viewHTMLElement.onfocus = onfocus\n        this._viewHTMLElement.onblur = onblur\n        // this.viewHTMLElement.addEventListener(\"focus\", onfocus, true)\n        // this.viewHTMLElement.addEventListener(\"blur\", onblur, true)\n        \n        \n    }\n    \n    \n    \n    \n    \n    public static controlEvent = {\n        \n        \"PointerDown\": \"PointerDown\",\n        \"PointerMove\": \"PointerMove\",\n        \"PointerLeave\": \"PointerLeave\",\n        \"PointerEnter\": \"PointerEnter\",\n        \"PointerUpInside\": \"PointerUpInside\",\n        \"PointerTap\": \"PointerTap\",\n        \"PointerUp\": \"PointerUp\",\n        \"MultipleTouches\": \"PointerZoom\",\n        \"PointerCancel\": \"PointerCancel\",\n        \"PointerHover\": \"PointerHover\",\n        \"EnterDown\": \"EnterDown\",\n        \"EnterUp\": \"EnterUp\",\n        \"EscDown\": \"EscDown\",\n        \"TabDown\": \"TabDown\",\n        \"LeftArrowDown\": \"LeftArrowDown\",\n        \"RightArrowDown\": \"RightArrowDown\",\n        \"DownArrowDown\": \"DownArrowDown\",\n        \"UpArrowDown\": \"UpArrowDown\",\n        \"Focus\": \"Focus\",\n        \"Blur\": \"Blur\"\n        \n    }\n    \n    controlEvent = UIView.controlEvent\n    \n    \n    \n    public get addControlEventTarget() {\n        \n        const eventKeys = []\n        \n        \n        const result: UIViewAddControlEventTargetObject<typeof UIView.controlEvent> = new Proxy(\n            (this.constructor as any).controlEvent,\n            {\n                \n                get: (target, key, receiver) => {\n                    \n                    eventKeys.push(key)\n                    \n                    return result\n                    \n                },\n                set: (target, key, value, receiver) => {\n                    \n                    eventKeys.push(key)\n                    \n                    this.addTargetForControlEvents(eventKeys, value)\n                    \n                    return true\n                    \n                }\n                \n            }\n        )\n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    addTargetForControlEvents(eventKeys: string[], targetFunction: (sender: UIView, event: Event) => void) {\n        \n        eventKeys.forEach(function (this: UIView, key: string, index: number, array: string[]) {\n            \n            this.addTargetForControlEvent(key, targetFunction)\n            \n        }, this)\n        \n    }\n    \n    \n    \n    addTargetForControlEvent(eventKey: string, targetFunction: (sender: UIView, event: Event) => void) {\n        \n        var targets = this._controlEventTargets[eventKey]\n        \n        if (!targets) {\n            // @ts-ignore\n            targets = []\n            this._controlEventTargets[eventKey] = targets\n        }\n        \n        if (targets.indexOf(targetFunction) == -1) {\n            targets.push(targetFunction)\n        }\n        \n    }\n    \n    removeTargetForControlEvent(eventKey: string, targetFunction: (sender: UIView, event: Event) => void) {\n        const targets = this._controlEventTargets[eventKey]\n        if (!targets) {\n            return\n        }\n        const index = targets.indexOf(targetFunction)\n        if (index != -1) {\n            targets.splice(index, 1)\n        }\n    }\n    \n    removeTargetForControlEvents(eventKeys: string[], targetFunction: (sender: UIView, event: Event) => void) {\n        \n        eventKeys.forEach(function (key, index, array) {\n            \n            this.removeTargetForControlEvent(key, targetFunction)\n            \n        }, this)\n        \n    }\n    \n    sendControlEventForKey(eventKey: string, nativeEvent: Event) {\n        var targets = this._controlEventTargets[eventKey]\n        if (!targets) {\n            return\n        }\n        targets = targets.copy()\n        for (var i = 0; i < targets.length; i++) {\n            const target = targets[i]\n            target(this, nativeEvent)\n        }\n    }\n    \n    \n    \n    \n    \n    static broadcastEventName = {\n        \n        \"LanguageChanged\": \"LanguageChanged\",\n        \"RemovedFromViewTree\": \"RemovedFromViewTree\",\n        \"AddedToViewTree\": \"AddedToViewTree\",\n        \"PageDidScroll\": \"PageDidScroll\"\n        \n    }\n    \n    \n    broadcastEventInSubtree(event: UIViewBroadcastEvent) {\n        \n        this.forEachViewInSubtree(function (view) {\n            \n            view.didReceiveBroadcastEvent(event)\n            \n            if (view._didReceiveBroadcastEventDelegateFunction) {\n                \n                view._didReceiveBroadcastEventDelegateFunction(event)\n                \n            }\n            \n        })\n        \n        \n    }\n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent) {\n        \n        if (event.name == UIView.broadcastEventName.PageDidScroll) {\n            \n            this._isPointerValid = NO\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.AddedToViewTree) {\n            \n            this.wasAddedToViewTree()\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.RemovedFromViewTree) {\n            \n            this.wasRemovedFromViewTree()\n            \n        }\n        \n        if (event.name == UIView.broadcastEventName.LanguageChanged || event.name ==\n            UIView.broadcastEventName.AddedToViewTree) {\n            \n            this._setInnerHTMLFromKeyIfPossible()\n            \n            this._setInnerHTMLFromLocalizedTextObjectIfPossible()\n            \n        }\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    forEachViewInSubtree(functionToCall: (view: UIView) => void) {\n        \n        functionToCall(this)\n        \n        this.subviews.forEach(function (subview, index, array) {\n            \n            subview.forEachViewInSubtree(functionToCall)\n            \n        })\n        \n    }\n    \n    \n    \n    \n    \n    rectangleInView(rectangle: UIRectangle, view: UIView) {\n        if (!view.isMemberOfViewTree || !this.isMemberOfViewTree) {\n            return nil\n        }\n        \n        const viewClientRectangle = view.viewHTMLElement.getBoundingClientRect()\n        const viewLocation = new UIPoint(viewClientRectangle.left, viewClientRectangle.top)\n        \n        const selfClientRectangle = this.viewHTMLElement.getBoundingClientRect()\n        const selfLocation = new UIPoint(selfClientRectangle.left, selfClientRectangle.top)\n        \n        const offsetPoint = selfLocation.subtract(viewLocation)\n        \n        return rectangle.copy().offsetByPoint(offsetPoint)\n    }\n    \n    rectangleFromView(rectangle: UIRectangle, view: UIView) {\n        return view.rectangleInView(rectangle, this)\n    }\n    \n    \n    \n    \n    \n    intrinsicContentSizeWithConstraints(constrainingHeight: number = 0, constrainingWidth: number = 0) {\n        \n        // This works but is slow\n        \n        const result = new UIRectangle(0, 0, 0, 0)\n        if (this.rootView.forceIntrinsicSizeZero) {\n            return result\n        }\n        \n        var temporarilyInViewTree = NO\n        var nodeAboveThisView: Node\n        if (!this.isMemberOfViewTree) {\n            document.body.appendChild(this.viewHTMLElement)\n            temporarilyInViewTree = YES\n            nodeAboveThisView = this.viewHTMLElement.nextSibling\n        }\n        \n        const height = this.style.height\n        const width = this.style.width\n        \n        this.style.height = \"\" + constrainingHeight\n        this.style.width = \"\" + constrainingWidth\n        \n        \n        const left = this.style.left\n        const right = this.style.right\n        const bottom = this.style.bottom\n        const top = this.style.top\n        \n        this.style.left = \"\"\n        this.style.right = \"\"\n        this.style.bottom = \"\"\n        this.style.top = \"\"\n        \n        \n        const resultHeight = this.viewHTMLElement.scrollHeight\n        \n        \n        const whiteSpace = this.style.whiteSpace\n        this.style.whiteSpace = \"nowrap\"\n        \n        const resultWidth = this.viewHTMLElement.scrollWidth\n        \n        this.style.whiteSpace = whiteSpace\n        \n        \n        \n        this.style.height = height\n        this.style.width = width\n        \n        this.style.left = left\n        this.style.right = right\n        this.style.bottom = bottom\n        this.style.top = top\n        \n        if (temporarilyInViewTree) {\n            document.body.removeChild(this.viewHTMLElement)\n            if (this.superview) {\n                if (nodeAboveThisView) {\n                    this.superview.viewHTMLElement.insertBefore(this.viewHTMLElement, nodeAboveThisView)\n                }\n                else {\n                    this.superview.viewHTMLElement.appendChild(this.viewHTMLElement)\n                }\n            }\n        }\n        \n        result.height = resultHeight\n        result.width = resultWidth\n        \n        \n        return result\n        \n    }\n    \n    \n    \n    \n    \n    intrinsicContentWidth(constrainingHeight: number = 0): number {\n        \n        const result = this.intrinsicContentSizeWithConstraints(constrainingHeight).width\n        \n        return result\n        \n    }\n    \n    intrinsicContentHeight(constrainingWidth: number = 0): number {\n        \n        const result = this.intrinsicContentSizeWithConstraints(undefined, constrainingWidth).height\n        \n        return result\n        \n        \n    }\n    \n    intrinsicContentSize(): UIRectangle {\n        \n        return nil\n        \n    }\n    \n    \n    \n    \n    \n}\n\n\n// This is here because modules fail with circular imports but they are needed here\ndeclare class UIDialogView<ViewType extends UIView = UIView> extends UIView {\n    _view: ViewType\n    _appearedAnimated: boolean\n    animationDuration: number\n    _zIndex: number\n    isVisible: boolean\n    dismissesOnTapOutside: boolean\n    \n    constructor(elementID?: string, viewHTMLElement?: HTMLElement);\n    \n    didDetectTapOutside(sender: UIView, event: Event): void;\n    \n    set zIndex(zIndex: number);\n    get zIndex(): number;\n    \n    set view(view: ViewType);\n    get view(): ViewType;\n    \n    willAppear(animated?: boolean): void;\n    \n    animateAppearing(): void;\n    \n    animateDisappearing(): void;\n    \n    showInView(containerView: UIView, animated: boolean): void;\n    \n    showInRootView(animated: boolean): void;\n    \n    dismiss(animated?: boolean): void;\n    \n    didReceiveBroadcastEvent(event: UIViewBroadcastEvent): void;\n    \n    layoutSubviews(): void;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": "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",
  "names": ["view", "i", "onTouchZoom"]
}
