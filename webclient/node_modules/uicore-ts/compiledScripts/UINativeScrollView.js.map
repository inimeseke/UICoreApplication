{
  "version": 3,
  "sources": ["../scripts/UINativeScrollView.ts"],
  "sourcesContent": ["import { nil } from \"./UIObject\"\nimport { UIPoint } from \"./UIPoint\"\nimport { UIView } from \"./UIView\"\n\n\n\n\n\nexport class UINativeScrollView extends UIView {\n    \n    \n    animationDuration = 0\n    \n    constructor(elementID, viewHTMLElement?) {\n        \n        super(elementID, viewHTMLElement)\n        \n        this.style.cssText = this.style.cssText + \"-webkit-overflow-scrolling: touch;\"\n        \n        this.style.overflow = \"auto\"\n        \n        // this.scrollsX = YES;\n        // this.scrollsY = YES;\n        \n        this.viewHTMLElement.addEventListener(\"scroll\", function (this: UINativeScrollView, event: UIEvent) {\n            \n            \n            this.didScrollToPosition(new UIPoint(this.viewHTMLElement.scrollLeft, this.viewHTMLElement.scrollTop))\n            \n            this.broadcastEventInSubtree({\n                \n                name: UIView.broadcastEventName.PageDidScroll,\n                parameters: nil\n                \n            })\n            \n            \n        }.bind(this))\n        \n        \n    }\n    \n    \n    \n    \n    \n    didScrollToPosition(offsetPosition: UIPoint) {\n        \n        \n        \n    }\n    \n    \n    \n    get scrollsX() {\n        const result = (this.style.overflowX == \"scroll\")\n        return result\n    }\n    \n    set scrollsX(scrolls: boolean) {\n        if (scrolls) {\n            this.style.overflowX = \"scroll\"\n        }\n        else {\n            this.style.overflowX = \"hidden\"\n        }\n    }\n    \n    \n    \n    get scrollsY() {\n        const result = (this.style.overflowY == \"scroll\")\n        return result\n    }\n    \n    set scrollsY(scrolls: boolean) {\n        if (scrolls) {\n            this.style.overflowY = \"scroll\"\n        }\n        else {\n            this.style.overflowY = \"hidden\"\n        }\n    }\n    \n    \n    \n    get contentOffset() {\n        const result = new UIPoint(this.viewHTMLElement.scrollLeft, this.viewHTMLElement.scrollTop)\n        return result\n    }\n    \n    \n    set contentOffset(offsetPoint: UIPoint) {\n        \n        if (this.animationDuration) {\n            \n            this.scrollXTo(this.viewHTMLElement, offsetPoint.x, this.animationDuration)\n            this.scrollYTo(this.viewHTMLElement, offsetPoint.y, this.animationDuration)\n            \n            return\n            \n        }\n        \n        \n        this.viewHTMLElement.scrollLeft = offsetPoint.x\n        this.viewHTMLElement.scrollTop = offsetPoint.y\n        \n    }\n    \n    \n    scrollToBottom() {\n        \n        this.contentOffset = new UIPoint(this.contentOffset.x, this.scrollSize.height - this.frame.height)\n        \n    }\n    \n    scrollToTop() {\n        \n        this.contentOffset = new UIPoint(this.contentOffset.x, 0)\n        \n    }\n    \n    get isScrolledToBottom() {\n        \n        return this.contentOffset.isEqualTo(new UIPoint(this.contentOffset.x, this.scrollSize.height -\n            this.frame.height))\n        \n    }\n    \n    get isScrolledToTop() {\n        \n        return this.contentOffset.isEqualTo(new UIPoint(this.contentOffset.x, 0))\n        \n    }\n    \n    \n    \n    \n    \n    scrollYTo(element, to, duration) {\n        \n        duration = duration * 1000\n    \n        const start = element.scrollTop\n        const change = to - start\n        const increment = 10\n    \n        const animateScroll = function (elapsedTime) {\n            elapsedTime += increment\n            const position = this.easeInOut(elapsedTime, start, change, duration)\n            element.scrollTop = position\n            if (elapsedTime < duration) {\n                setTimeout(function () {\n                    animateScroll(elapsedTime)\n                }, increment)\n            }\n        }.bind(this)\n    \n        animateScroll(0)\n    }\n    \n    scrollXTo(element, to, duration) {\n        \n        duration = duration * 1000\n    \n        const start = element.scrollTop\n        const change = to - start\n        const increment = 10\n    \n        const animateScroll = function (elapsedTime) {\n            elapsedTime += increment\n            const position = this.easeInOut(elapsedTime, start, change, duration)\n            element.scrollLeft = position\n            if (elapsedTime < duration) {\n                setTimeout(function () {\n                    animateScroll(elapsedTime)\n                }, increment)\n            }\n        }.bind(this)\n    \n        animateScroll(0)\n    }\n    \n    easeInOut(currentTime, start, change, duration) {\n        currentTime /= duration / 2\n        if (currentTime < 1) {\n            return change / 2 * currentTime * currentTime + start\n        }\n        currentTime -= 1\n        return -change / 2 * (currentTime * (currentTime - 2) - 1) + start\n    }\n    \n    \n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],
  "mappings": "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",
  "names": []
}
