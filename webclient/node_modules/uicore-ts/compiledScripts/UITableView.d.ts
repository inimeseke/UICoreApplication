import { UINativeScrollView } from "./UINativeScrollView";
import { UIPoint } from "./UIPoint";
import { UIRectangle } from "./UIRectangle";
import { UIView, UIViewBroadcastEvent } from "./UIView";
export interface UITableViewReusableViewsContainerObject {
    [key: string]: UIView[];
}
export interface UITableViewReusableViewPositionObject {
    bottomY: number;
    topY: number;
    isValid: boolean;
}
export declare class UITableView extends UINativeScrollView {
    allRowsHaveEqualHeight: boolean;
    _visibleRows: UIView[];
    _firstLayoutVisibleRows: UIView[];
    _rowPositions: UITableViewReusableViewPositionObject[];
    _highestValidRowPositionIndex: number;
    _reusableViews: UITableViewReusableViewsContainerObject;
    _removedReusableViews: UITableViewReusableViewsContainerObject;
    _fullHeightView: UIView;
    _rowIDIndex: number;
    reloadsOnLanguageChange: boolean;
    sidePadding: number;
    _persistedData: any[];
    _needsDrawingOfVisibleRowsBeforeLayout: boolean;
    _isDrawVisibleRowsScheduled: boolean;
    _shouldAnimateNextLayout: boolean;
    animationDuration: number;
    constructor(elementID: any);
    initView(elementID: any, viewHTMLElement: any): void;
    loadData(): void;
    reloadData(): void;
    highlightChanges(previousData: any[], newData: any[]): void;
    highlightRowAsNew(row: UIView): void;
    invalidateSizeOfRowWithIndex(index: number, animateChange?: boolean): void;
    _calculateAllPositions(): void;
    _calculatePositionsUntilIndex(maxIndex: number): void;
    indexesForVisibleRows(paddingRatio?: number): number[];
    _removeVisibleRows(): void;
    _removeAllReusableRows(): void;
    _markReusableViewAsUnused(row: UIView): void;
    _drawVisibleRows(): void;
    visibleRowWithIndex(rowIndex: number): UIView;
    isRowWithIndexVisible(rowIndex: number): boolean;
    reusableViewForIdentifier(identifier: string, rowIndex: number): UIView;
    newReusableViewForIdentifier(identifier: string, rowIDIndex: number): UIView;
    heightForRowWithIndex(index: number): number;
    numberOfRows(): number;
    defaultRowPersistenceDataItem(): void;
    persistenceDataItemForRowWithIndex(rowIndex: number, row: UIView): void;
    viewForRowWithIndex(rowIndex: number): UIView;
    didScrollToPosition(offsetPosition: UIPoint): void;
    wasAddedToViewTree(): void;
    setFrame(rectangle: UIRectangle, zIndex?: number, performUncheckedLayout?: boolean): void;
    didReceiveBroadcastEvent(event: UIViewBroadcastEvent): void;
    private _layoutAllRows;
    private _animateLayoutAllRows;
    layoutSubviews(): void;
    intrinsicContentHeight(constrainingWidth?: number): number;
}
